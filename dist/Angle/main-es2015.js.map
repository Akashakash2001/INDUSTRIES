{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/preferences/organisation-setting/organisation-setting.component.ts","./src/app/core/preferences/organisation-setting/organisation-setting.component.html","./src/app/core/preferences/preferences.component.ts","./src/app/core/preferences/preferences.component.html","./src/app/customers/customer-edit/customer-edit.component.ts","./src/app/customers/customer-edit/customer-edit.component.html","./src/app/customers/customer-list/customer-list.component.ts","./src/app/customers/customer-list/customer-list.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/employees/employee-edit/employee-edit.component.ts","./src/app/employees/employee-edit/employee-edit.component.html","./src/app/employees/employee-list/employee-list.component.ts","./src/app/employees/employee-list/employee-list.component.html","./src/app/invoice/invoice-number/invoice-number.component.ts","./src/app/invoice/invoice-number/invoice-number.component.html","./src/app/invoice/invoice-parts/invoice-parts.component.ts","./src/app/invoice/invoice-parts/parts.ts","./src/app/invoice/invoice.component.ts","./src/app/invoice/invoice.component.html","./src/app/invoice/invoice.service.ts","./src/app/invoice/invoive.service.ts","./src/app/invoice/print/print.component.ts","./src/app/invoice/print/print.component.html","./src/app/machines/machine-edit/machine-edit.component.ts","./src/app/machines/machine-edit/machine-edit.component.html","./src/app/machines/machine-list/machine-list.component.ts","./src/app/machines/machine-list/machine-list.component.html","./src/app/materials/material-edit/material-edit.component.ts","./src/app/materials/material-edit/material-edit.component.html","./src/app/materials/material-list/material-list.component.ts","./src/app/materials/material-list/material-list.component.html","./src/app/moulds/mould-edit/mould-edit.component.ts","./src/app/moulds/mould-edit/mould-edit.component.html","./src/app/moulds/mould-list/mould-list.component.ts","./src/app/moulds/mould-list/mould-list.component.html","./src/app/pages/pages.component.ts","./src/app/pages/pages.component.html","./src/app/parts/part-edit/part-edit.component.ts","./src/app/parts/part-edit/part-edit.component.html","./src/app/parts/part-list/part-list.component.ts","./src/app/parts/part-list/part-list.component.html","./src/app/planning-and-control/loading-sheet/loading-edit/loading-edit.component.ts","./src/app/planning-and-control/loading-sheet/loading-edit/loading-edit.component.html","./src/app/planning-and-control/loading-sheet/loading-list/loading-list.component.ts","./src/app/planning-and-control/loading-sheet/loading-list/loading-list.component.html","./src/app/planning-and-control/schedule/schedule.component.ts","./src/app/planning-and-control/schedule/schedule.component.html","./src/app/services/database/database.service.ts","./src/app/ui/Delete/form-delete/form-delete.component.ts","./src/app/ui/Delete/form-delete/form-delete.component.html","./src/app/ui/animations.ts","./src/app/ui/form-footer/form-footer.component.ts","./src/app/ui/form-footer/form-footer.component.html","./src/app/ui/list-view/list-view.component.ts","./src/app/ui/list-view/list-view.component.html","./src/app/ui/navbar/navbar.component.ts","./src/app/ui/navbar/navbar.component.html","./src/app/ui/sidenav/sidenav.component.ts","./src/app/ui/sidenav/sidenav.component.html","./src/app/ui/toast.service.ts","./src/app/vendors/vendor-edit/vendor-edit.component.ts","./src/app/vendors/vendor-edit/vendor-edit.component.html","./src/app/vendors/vendor-list/vendor-list.component.ts","./src/app/vendors/vendor-list/vendor-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CustomerEditComponent } from './customers/customer-edit/customer-edit.component';\nimport { CustomerListComponent } from './customers/customer-list/customer-list.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Component\nimport { PartListComponent } from './parts/part-list/part-list.component';\nimport { PartEditComponent } from './parts/part-edit/part-edit.component';\nimport { VendorListComponent } from './vendors/vendor-list/vendor-list.component';\nimport { VendorEditComponent } from './vendors/vendor-edit/vendor-edit.component';\nimport { MaterialListComponent } from './materials/material-list/material-list.component';\nimport { MaterialEditComponent } from './materials/material-edit/material-edit.component';\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\nimport { EmployeeEditComponent } from './employees/employee-edit/employee-edit.component';\nimport { MachineListComponent } from './machines/machine-list/machine-list.component';\nimport { MachineEditComponent } from './machines/machine-edit/machine-edit.component';\nimport { MouldListComponent } from './moulds/mould-list/mould-list.component';\nimport { MouldEditComponent } from './moulds/mould-edit/mould-edit.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PreferencesComponent } from './core/preferences/preferences.component';\nimport { InvoiceComponent } from './invoice/invoice.component';\nimport { ScheduleComponent } from './planning-and-control/schedule/schedule.component';\nimport { LoadingEditComponent } from './planning-and-control/loading-sheet/loading-edit/loading-edit.component';\nimport { LoadingListComponent } from './planning-and-control/loading-sheet/loading-list/loading-list.component';\nimport { PrintComponent } from './invoice/print/print.component';\n\n\nconst routes: Routes = [\n  { path: 'parts', component: PartListComponent },\n  { path: 'parts/new', component: PartEditComponent },\n  { path: 'parts/:id', component: PartEditComponent },\n  { path: 'customers', component: CustomerListComponent },\n  { path: 'customers/new', component: CustomerEditComponent },\n  { path: 'customers/:id', component: CustomerEditComponent },\n  { path: 'vendors', component: VendorListComponent },\n  { path: 'vendors/new', component: VendorEditComponent },\n  { path: 'vendors/:id', component: VendorEditComponent },\n  { path: 'materials', component: MaterialListComponent },\n  { path: 'materials/new', component: MaterialEditComponent },\n  { path: 'materials/:id', component: MaterialEditComponent },\n  { path: 'employees', component: EmployeeListComponent },\n  { path: 'employees/new', component: EmployeeEditComponent },\n  { path: 'employees/:id', component: EmployeeEditComponent },\n  { path: 'machines', component: MachineListComponent },\n  { path: 'machines/new', component: MachineEditComponent },\n  { path: 'machines/:id', component: MachineEditComponent },\n  { path: 'moulds', component: MouldListComponent },\n  { path: 'moulds/new', component: MouldEditComponent },\n  { path: 'moulds/:id', component: MouldEditComponent },\n  { path: 'preferences', component: PreferencesComponent },\n  { path: 'invoice', component: InvoiceComponent },\n  { path: 'schedule', component: ScheduleComponent },\n  { path: 'loading', component: LoadingListComponent },\n  { path: 'loading/new', component: LoadingEditComponent },\n  { path: 'loading/:id', component: LoadingEditComponent },\n  { path: '', component: DashboardComponent },\n  { path: 'print', component: PrintComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { PagesComponent } from './pages/pages.component';\nimport { NbMenuItem } from '@nebular/theme';\nimport { RouterOutlet } from '@angular/router';\nimport { fader } from './ui/animations';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [fader]\n})\nexport class AppComponent {\n  title = 'Angle';\n\n  showSidenav: boolean;\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n\n  toggleSidenav(status) {\n    this.showSidenav = status;\n  }\n}\n","<app-navbar (sidenavStatus)=\"toggleSidenav($event)\"></app-navbar>\n<app-sidenav [showSidenav]=\"showSidenav\"></app-sidenav>\n<nb-layout center>\n\n\n\n\n\n  <!-- <app-pages></app-pages> -->\n  <!-- <div class=\"main\"> -->\n  <!-- </div> -->\n  <nb-layout-column [@routeAnimations]=\"prepareRoute(outlet)\" class=\"main\" id=\"main\">\n    <router-outlet #outlet=\"outlet\"></router-outlet>\n  </nb-layout-column>\n\n  <!-- <nb-layout-footer fixed>\n  </nb-layout-footer> -->\n\n</nb-layout>","// ANGULAR\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PagesComponent } from './pages/pages.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n// NEBULAR\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport {\n  NbThemeModule, NbLayoutModule, NbInputModule, NbAccordionModule, NbCardModule, NbButtonModule, NbSidebarModule,\n  NbMenuModule, NbListModule, NbActionsModule, NbSelectModule, NbFormFieldModule, NbTabsetModule, NbAutocompleteModule, NbIconModule, NbDialogModule,\n  NbRadioModule, NbDatepickerModule\n} from '@nebular/theme';\n\n// TOASTR\nimport { ToastrModule } from 'ngx-toastr';\n\n// COMPONENTS\nimport { PartEditComponent } from './parts/part-edit/part-edit.component';\nimport { PartListComponent } from './parts/part-list/part-list.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CustomerEditComponent } from './customers/customer-edit/customer-edit.component';\nimport { CustomerListComponent } from './customers/customer-list/customer-list.component';\nimport { VendorListComponent } from './vendors/vendor-list/vendor-list.component';\nimport { VendorEditComponent } from './vendors/vendor-edit/vendor-edit.component';\nimport { MaterialEditComponent } from './materials/material-edit/material-edit.component';\nimport { MaterialListComponent } from './materials/material-list/material-list.component';\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\nimport { EmployeeEditComponent } from './employees/employee-edit/employee-edit.component';\nimport { MachineListComponent } from './machines/machine-list/machine-list.component';\nimport { MachineEditComponent } from './machines/machine-edit/machine-edit.component';\nimport { MouldListComponent } from './moulds/mould-list/mould-list.component';\nimport { MouldEditComponent } from './moulds/mould-edit/mould-edit.component';\nimport { FormFooterComponent } from './ui/form-footer/form-footer.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavbarComponent } from './ui/navbar/navbar.component';\n\n// FIRESTORE\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\n\n// SERVICES\nimport { DatabaseService } from './services/database/database.service';\nimport { ListViewComponent } from './ui/list-view/list-view.component';\nimport { PreferencesComponent } from './core/preferences/preferences.component';\nimport { OrganisationSettingComponent } from './core/preferences/organisation-setting/organisation-setting.component';\nimport { InvoiceComponent } from './invoice/invoice.component';\nimport { InvoiceNumberComponent } from './invoice/invoice-number/invoice-number.component';\nimport { InvoicePartsComponent } from './invoice/invoice-parts/invoice-parts.component';\nimport { ScheduleComponent } from './planning-and-control/schedule/schedule.component';\nimport { LoadingListComponent } from './planning-and-control/loading-sheet/loading-list/loading-list.component';\nimport { LoadingEditComponent } from './planning-and-control/loading-sheet/loading-edit/loading-edit.component';\nimport { PrintComponent } from './invoice/print/print.component';\nimport { SidenavComponent } from './ui/sidenav/sidenav.component';\nimport { FormDeleteComponent } from './ui/Delete/form-delete/form-delete.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PagesComponent,\n    PartEditComponent,\n    PartListComponent,\n    CustomerEditComponent,\n    CustomerListComponent,\n    VendorListComponent,\n    VendorEditComponent,\n    MaterialEditComponent,\n    MaterialListComponent,\n    EmployeeListComponent,\n    EmployeeEditComponent,\n    MachineListComponent,\n    MachineEditComponent,\n    MouldListComponent,\n    MouldEditComponent,\n    FormFooterComponent,\n    ListViewComponent,\n    DashboardComponent,\n    NavbarComponent,\n    PreferencesComponent,\n    OrganisationSettingComponent,\n    InvoiceComponent,\n    InvoiceNumberComponent,\n    InvoicePartsComponent,\n    ScheduleComponent,\n    LoadingEditComponent,\n    LoadingListComponent,\n    PrintComponent,\n    SidenavComponent,\n    FormDeleteComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAnalyticsModule,\n    AngularFirestoreModule,\n    NbThemeModule.forRoot({ name: 'dark' }),\n    NbLayoutModule,\n    NbEvaIconsModule,\n    NbInputModule,\n    NbAccordionModule,\n    NbIconModule,\n    NbCardModule,\n    NbButtonModule,\n    NbSidebarModule.forRoot(),\n    NbMenuModule.forRoot(),\n    NbListModule,\n    NbActionsModule,\n    NbSelectModule,\n    NbFormFieldModule,\n    NbTabsetModule,\n    NbAutocompleteModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n      newestOnTop: false,\n      maxOpened: 4,\n      autoDismiss: true\n    }),\n    NbDialogModule.forRoot(),\n    NbRadioModule,\n    NbDatepickerModule.forRoot(),\n\n    \n\n  ],\n  providers: [\n    DatabaseService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\n\n\n\n@Component({\n  selector: 'app-organisation-setting',\n  templateUrl: './organisation-setting.component.html',\n  styleUrls: ['./organisation-setting.component.scss']\n})\nexport class OrganisationSettingComponent implements OnInit {\n  form: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nb-card>\n    <nb-card-header>Organisation Profile</nb-card-header>\n    <nb-card-body>\n        <form>\n            <div class=\"form-group\">\n                <label for=\"logo\" class=\"label\">Logo</label>\n                <input type=\"file\" id=\"file\">\n            </div>\n        </form>\n    </nb-card-body>\n</nb-card>\n\n<nb-card>\n    <nb-card-header>Organization Details</nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Organization Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" id=\"name\" placeholder=\"eg. Ajay\" nbInput>\n                    </div>\n                    <!-- ERROR -->\n                    <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div> -->\n                </div>\n            </div>\n            <div class= \"row\">\n                <div style=\"padding-left: 15px;\"></div>\n                <div class=\"form-group\">\n                    <label for=\"address\" class=\"label\">Organization address</label>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <input type=\"text\" id=\"address\" placeholder=\"eg. Ajay\" nbInput>\n                        </div>\n                        <!-- ERROR -->\n                        <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                            <div class=\"error\">\n                                <ul>\n                                    <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                    </li>\n                                    <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                            characters.</small>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div> -->\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"state\" class=\"label\">State</label>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <input type=\"text\" id=\"state\" placeholder=\"eg. Ajay\" nbInput>\n                        </div>\n                        <!-- ERROR -->\n                        <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                            <div class=\"error\">\n                                <ul>\n                                    <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                    </li>\n                                    <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                            characters.</small>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div> -->\n                    </div>\n                </div>\n            </div>\n            \n\n            <div class=\"row\">\n            <div style=\"padding-left: 15px;\"></div>\n            <div class=\"form-group\">\n                <label for=\"pincode\" class=\"label\">Pincode</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" id=\"pincode\" placeholder=\"eg. Ajay\" nbInput>\n                    </div>\n                    <!-- ERROR -->\n                    <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div> -->\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"phone\" class=\"label\">Phone Number</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" id=\"phone\" placeholder=\"eg. Ajay\" nbInput>\n                    </div>\n                    <!-- ERROR -->\n                    <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div> -->\n                </div>\n            </div>\n            \n            </div>\n\n\n\n            <div class=\"row\">\n            <div style=\"padding-left: 15px;\"></div>\n            <div class=\"form-group\">\n                <label for=\"email\" class=\"label\">email</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" id=\"email\" placeholder=\"eg. Ajay\" nbInput>\n                    </div>\n                    <!-- ERROR -->\n                    <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div> -->\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"website\" class=\"label\">Website</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" id=\"website\" placeholder=\"eg. Ajay\" nbInput>\n                    </div>\n                    <!-- ERROR -->\n                    <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div> -->\n                </div>\n            </div>\n            </div>\n        </form>\n    </nb-card-body>\n</nb-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preferences',\n  templateUrl: './preferences.component.html',\n  styleUrls: ['./preferences.component.scss']\n})\nexport class PreferencesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-organisation-setting></app-organisation-setting>","import { ToastService } from './../../ui/toast.service';\nimport { DatabaseService } from './../../services/database/database.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: ['./customer-edit.component.scss']\n})\nexport class CustomerEditComponent implements OnInit {\n\n  // GETTERS AND SETTERS\n  get name() {\n    return this.form.get('name');\n  }\n  get address() {\n    return this.form.get('address');\n  }\n  get pincode() {\n    return this.form.get('pincode');\n  }\n  get gstin() {\n    return this.form.get('gstin');\n  }\n  // DECLARATIONS\n  private selectedId: string;\n  selectedObject: any;\n  form: FormGroup;\n  validity = false;\n\n  // MAIN\n  constructor(\n    private fb: FormBuilder,\n    private db: DatabaseService,\n    private toast: ToastService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.selectedId = params.get('id');\n      this.fetchObject();\n    });\n    this.form = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      address: ['', [Validators.required, Validators.minLength(3)]],\n      pincode: ['', [Validators.required, Validators.minLength(3)]],\n      gstin: ['', [Validators.required, Validators.minLength(15), Validators.maxLength(15)]]\n    });\n\n    this.form.valueChanges.subscribe(() => {\n      this.validity = this.form.valid;\n    });\n  }\n  fetchObject() {\n    if (this.selectedId) {\n      this.selectedObject = this.db.getCustomer(this.selectedId);\n      this.selectedObject.subscribe((data: any) => {\n        this.form.setValue({\n          name: data.name,\n          address: data.address,\n          pincode: data.pincode,\n          gstin: data.gstin\n        });\n      });\n    }\n  }\n  onButtonClicked(clickedButton) {\n    if (clickedButton === 'save') {\n      this.db.addCustomer(this.form.value, this.selectedId)\n        .then(() => {\n          this.toast.success('Customer updated succesfully');\n          this.form.reset();\n          if (this.selectedId) {\n            this.location.back();\n          }\n        });\n    }\n  }\n}\n","<nb-card>\n    <nb-card-header>Customer Details</nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput\n                            fullWidth formControlName=\"name\" id=\"name\" placeholder=\"eg. Morakhot Industries Pvt. Ltd.\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter name of the\n                                        Customer</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Vendor's Name should contain\n                                        atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Address</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <textarea type=\"text\" [class.is-invalid]=\"address.invalid && (address.dirty || address.touched)\"\n                            nbInput fullWidth class=\"form-control\" formControlName=\"address\" id=\"address\"\n                            placeholder=\"eg. No 6/26 Shastri Bhavan                                                                                              2nd Floor, Haddows Road,                                                                  Nungambakkam\"\n                            rows=\"3\"></textarea>\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"address.invalid && (address.dirty || address.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"address.errors?.required\"> <small>Please enter an\n                                        Address</small></li>\n                                <li *ngIf=\"address.errors?.minlength\"> <small>Address should contain\n                                        atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Pincode</label>\n                <div class=\"row\">\n                    <div class=\"col-md-2 col-5\">\n                        <input type=\"number\" [class.is-invalid]=\"pincode.invalid && (pincode.dirty || pincode.touched)\"\n                            nbInput fullWidth class=\"form-control\" formControlName=\"pincode\" id=\"pincode\">\n                        <!-- placeholder=\"eg. 600001\" -->\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"pincode.invalid && (pincode.dirty || pincode.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"pincode.errors?.required\"> <small>Please enter a\n                                        Pincode</small></li>\n                                <li *ngIf=\"pincode.errors?.minlength\"> <small>Part Name should contain 6\n                                        numbers.</small>\n                                </li>\n                                <li *ngIf=\"gstin.errors?.required\"> <small>eg. 600001</small></li>\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">GSTIN</label>\n                <div class=\"row\">\n                    <div class=\"col-md-3 col-8\">\n                        <input type=\"text\" [class.is-invalid]=\"gstin.invalid && (gstin.dirty || gstin.touched)\" nbInput\n                            fullWidth class=\"form-control\" formControlName=\"gstin\" id=\"gstin\">\n                        <!-- placeholder=\"eg. 33AABCT3518Q1Z3\" -->\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"gstin.invalid && (gstin.dirty || gstin.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"gstin.errors?.required\"> <small>Please enter a valid GSTIN</small></li>\n                                <li *ngIf=\"gstin.errors?.minlength ||  gstin.errors?.maxlength\"> <small>GSTIN should\n                                        contain 15\n                                        only\n                                        characters.</small>\n                                </li>\n                                <li *ngIf=\"gstin.errors?.required\"> <small>eg. 33AABCT3518Q1Z3</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n\n    </nb-card-body>\n</nb-card>\n\n<!-- FOOTER -->\n<ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer>","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from 'src/app/services/database/database.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\nexport class CustomerListComponent implements OnInit {\n  sort: any = '1';\n  data: any = [];\n\n  constructor(private db: DatabaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.db.getCustomers().subscribe((data) => {\n      this.data = data;\n    });\n\n  }\n\n  onItemSelected(item) {\n    this.router.navigate([`/customers/${item.id}`]);\n    // this.router.navigate([`/materials/${product.id}`]);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <button nbButton size=\"small\" routerLink='/customers/new' status=\"primary\">New Customer</button>\n    </div>\n    <!-- <div class=\"col-2\"> -->\n    <!-- <nb-select size=\"small\" style=\"margin-left:auto\" [(selected)]='sort' status=\"basic\">\n        <nb-option value=\"1\">name</nb-option>\n        <nb-option value=\"2\">Option 2</nb-option>\n        <nb-option value=\"3\">Option 3</nb-option>\n        <nb-option value=\"4\">Option 4</nb-option>\n    </nb-select> -->\n    <!-- </div> -->\n\n    <nb-actions class=\"col-6\">\n        <nb-action icon=\"search-outline\"></nb-action>\n        <nb-action icon=\"power-outline\"> Views</nb-action>\n        <nb-action icon=\"person-outline\"></nb-action>\n        <nb-action icon=\"home-outline\"></nb-action>\n    </nb-actions>\n</div>\n\n<ui-list-view [list]=\"data\" (onclick)=\"onItemSelected($event)\"></ui-list-view>","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from 'src/app/services/database/database.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  parts: any;\n  materials: any;\n  machines: any;\n  moulds: any;\n  constructor(private db: DatabaseService) { \n    this.db.getParts().subscribe((data) => {\n      this.parts = data.length;\n    });\n    this.db.getMachines().subscribe((data) => {\n      this.machines = data.length;\n    });\n    this.db.getMaterials().subscribe((data) => {\n      this.materials = data.length;\n    });\n    this.db.getMoulds().subscribe((data) => {\n      this.moulds = data.length;\n    });\n\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"row\">\n    <!-- PARTS -->\n    <div class=\"card\">\n        <div class=\"row\">\n            \n            <div class=\"column\">\n                <div style=\"margin-left: 25px;\">\n                    <h4 style=\"color: #09bc8a;\">\n                        <b>{{parts}}</b>\n                    </h4>\n                </div>\n                <div style=\"margin-left: 25px;\">\n                    <p>Total parts</p>\n                </div>\n            </div>\n            <div class=\"column\" style=\"margin-left:50px; margin-top:40px\">\n                <div style=\"background-color: #09bc8a; border-radius: 50%;\">\n                    <nb-icon icon=\"cube-outline\"></nb-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- MATERIALS -->\n    <div class=\"card\">\n        <div class=\"row\">\n            <div class=\"column\">\n                <div style=\"margin-left: 25px;\">\n                    <h4 style=\"color: #d743eb;\">\n                        <b>{{materials}}</b>\n                    </h4>\n                </div>\n                <div style=\"margin-left: 25px;\">\n                    <p>Total Materials</p>\n                </div>\n            </div>\n            <div class=\"column\" style=\"margin-left:30px; margin-top:40px\">\n                <div style=\"background-color: #b717cc; border-radius: 50%;\">\n                    <nb-icon icon=\"copy-outline\"></nb-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- MOULDS -->\n    <div class=\"card\">\n        <div class=\"row\">\n            <div class=\"column\">\n                <div style=\"margin-left: 25px;\">\n                    <h4 style=\"color: #aabc09;\">\n                        <b>{{moulds}}</b>\n                    </h4>\n                </div>\n                <div style=\"margin-left: 25px;\">\n                    <p>Total Moulds</p>\n                </div>\n            </div>\n            <div class=\"column\" style=\"margin-left:30px; margin-top:40px\">\n                <div style=\"background-color: #aabc09; border-radius: 50%;\">\n                    <nb-icon icon=\"printer-outline\"></nb-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- MACHINES -->\n    <div class=\"card\">\n        <div class=\"row\">\n            <div class=\"column\">\n                <div style=\"margin-left: 25px;\">\n                    <h4 style=\"color: #ce6815;\">\n                        <b>{{machines}}</b>\n                    </h4>\n                </div>\n                <div style=\"margin-left: 25px;\">\n                    <p>Total machines</p>\n                </div>\n            </div>\n            <div class=\"column\" style=\"margin-left:30px; margin-top:40px\">\n                <div style=\"background-color: #ce6815; border-radius: 50%;\">\n                    <nb-icon icon=\"pantone-outline\"></nb-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div style=\"margin-top: 20px;\">\n    <label for=\"inventoryType\" class=\"label\">Application</label>\n\n    <div class=\"button-section\">\n        <button class=\"row button-card\" type=\"button\" onclick=\"window.location.href = 'invoice'\">\n           <label class=\"button-title\">Invoice</label>\n           <p>Line 2</p>\n        </button>\n        <button class=\"row button-card\" type=\"button\">\n            <label>Jobcard</label>\n            <p>Line 2</p>\n         </button>\n\n    </div>\n\n    <!-- <div class=\"row radio-section\">\n\n        <div class=\"col radio-option\">\n            <label>\n\n                <input type=\"radio\">\n                <div class=\"card radio-card\" for=\"control_01\">\n                    <img class=\"\" src=\"/assets/app/wip.svg\" alt=\"Card image cap\">\n                    <div class=\"card-body\">\n                        <p class=\"card-title text-center label\">WIP</p>\n                    </div>\n                </div>\n            </label>\n        </div>\n        <div class=\"col radio-option\">\n            <label>\n                <input type=\"button\" checked>\n                <div class=\"card button-card\" for=\"control_02\">\n                    <img class=\"card-img-top\" src=\"/assets/app/fg.svg\" alt=\"Card image cap\">\n                    <div class=\"card-body\">\n                        <p class=\"card-title text-center label\">FG</p>\n                    </div>\n                </div>\n            </label>\n        </div>\n    </div> -->\n</div>\n\n","import { ToastService } from './../../ui/toast.service';\nimport { DatabaseService } from './../../services/database/database.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n\n@Component({\n  selector: 'app-employee-edit',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.scss']\n})\nexport class EmployeeEditComponent implements OnInit {\n  // GETTERS AND SETTERS\n  get name() {\n    return this.form.get('name');\n  }\n  get code() {\n    return this.form.get('code');\n  }\n  get phone() {\n    return this.form.get('phone');\n  }\n  get email() {\n    return this.form.get('email');\n  }\n\n  // DECLARATIONS\n  private selectedId: string;\n  selectedObject: any;\n  form: FormGroup;\n  validity = false;\n\n  //MAIN\n  constructor(\n    private fb: FormBuilder,\n    private db: DatabaseService,\n    private toast: ToastService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.selectedId = params.get('id');\n      this.fetchObject();\n    });\n    this.form = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      code: ['', [Validators.required, Validators.minLength(3)]],\n      phone: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(12)]],\n      email: ['', [Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]]\n    });\n\n    this.form.valueChanges.subscribe(() => {\n      this.validity = this.form.valid;\n    });\n  }\n  fetchObject() {\n    if (this.selectedId) {\n      this.selectedObject = this.db.getEmployee(this.selectedId);\n      this.selectedObject.subscribe((data: any) => {\n        this.form.patchValue({\n          name: data.name,\n          code: data.code,\n          phone: data.phone,\n          email: data.email\n        });\n      });\n    }\n  }\n  // ONSUBMIT\n  onButtonClicked(clickedButton) {\n    if (clickedButton === 'save') {\n      // this.toast.success();\n      this.db.addEmployee(this.form.value, this.selectedId)\n        .then(() => {\n          this.toast.success('Employee updated succesfully');\n          this.form.reset();\n          if (this.selectedId) {\n            this.location.back();\n          }\n        });\n    }\n  }\n\n\n}\n","<nb-card>\n    <nb-card-header>Employee Details</nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput\n                            fullWidth formControlName=\"name\" id=\"name\" placeholder=\"eg. Ajay\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"code\" class=\"label\">Code</label>\n                <div class=\"row\">\n                    <div class=\"col-md-3\">\n                        <input type=\"text\" [class.is-invalid]=\"code.invalid && (code.dirty || code.touched)\" nbInput\n                            fullWidth formControlName=\"code\" id=\"code\" placeholder=\"eg. Ex - 19001\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"code.invalid && (code.dirty || code.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"code.errors?.required\"> <small>Please enter code of the Employee</small>\n                                </li>\n                                <li *ngIf=\"code.errors?.minlength\"> <small>Employee's code should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"phone\" class=\"label\">Phone</label>\n                <div class=\"row\">\n                    <div class=\"col-md-3\">\n                        <nb-form-field>\n                            <span nbPrefix>+91</span>\n                            <input fullWidth type=\"number\"\n                                [class.is-invalid]=\"phone.invalid && (phone.dirty || phone.touched)\" nbInput fullWidth\n                                formControlName=\"phone\" id=\"phone\" placeholder=\"999 111 2222\">\n                        </nb-form-field>\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"phone.errors?.required\"> <small>Please enter a Phone number</small>\n                                </li>\n                                <li *ngIf=\"phone.errors?.minlength\"> <small>Enter a valid\n                                        Phone number</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\" class=\"label\">Email <small>(optional)</small></label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <nb-form-field>\n                            <span nbPrefix>@</span>\n                            <input fullWidth type=\"text\"\n                                [class.is-invalid]=\"email.invalid && (email.dirty || email.touched)\" nbInput fullWidth\n                                formControlName=\"email\" id=\"email\" placeholder=\"abc@xyz.com\">\n                        </nb-form-field>\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"email.errors?.pattern\"> <small>Enter a valid email id</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </nb-card-body>\n</nb-card>\n<!-- FOOTER -->\n<ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer>","import { Router } from '@angular/router';\nimport { DatabaseService } from './../../services/database/database.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss']\n})\nexport class EmployeeListComponent implements OnInit {\n  sort: any = '1';\n  data: any = [];\n\n  constructor(private db: DatabaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.db.getEmployees().subscribe((data) => {\n      this.data = data;\n    });\n\n  }\n\n  onItemSelected(item) {\n    this.router.navigate([`/employees/${item.id}`]);\n    // this.router.navigate([`/materials/${product.id}`]);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <button nbButton size=\"small\" routerLink='/employees/new' status=\"primary\">New Employee</button>\n    </div>\n    <!-- <div class=\"col-2\"> -->\n    <!-- <nb-select size=\"small\" style=\"margin-left:auto\" [(selected)]='sort' status=\"basic\">\n        <nb-option value=\"1\">name</nb-option>\n        <nb-option value=\"2\">Option 2</nb-option>\n        <nb-option value=\"3\">Option 3</nb-option>\n        <nb-option value=\"4\">Option 4</nb-option>\n    </nb-select> -->\n    <!-- </div> -->\n\n    <nb-actions class=\"col-6\">\n        <nb-action icon=\"search-outline\"></nb-action>\n        <nb-action icon=\"power-outline\"> Views</nb-action>\n        <nb-action icon=\"person-outline\"></nb-action>\n        <nb-action icon=\"home-outline\"></nb-action>\n    </nb-actions>\n</div>\n\n<ui-list-view [list]=\"data\" (onclick)=\"onItemSelected($event)\"></ui-list-view>","import { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\nimport { InvoiveNumberService } from '../invoive.service';\nimport { Location } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-invoice-number',\n  templateUrl: './invoice-number.component.html',\n  styleUrls: ['./invoice-number.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InvoiceNumberComponent implements OnInit {\n  @Output() event = new EventEmitter<string>();\n\n  currentNumber: number = 0;\n  prefix;\n  radio;\n  price;\n  gender;\n  constructor(\n    private dialogRef: NbDialogRef<any>) {\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onDismissClicked() {\n    this.dialogRef.close()\n  }\n\n  onAutoClicked() {\n  }\n\n  onSubmitClicked(){\n    console.log(\"Submit Clicked\");\n    console.log(this.radio);\n    console.log(this.prefix);\n    console.log(this.currentNumber);\n  }\n\n}\n\n","<nb-card>\n    <nb-card-header>Invoice Number\n        <button nbButton ghost status=\"control\" style=\"float:right;\" (click)=\"onDismissClicked()\">\n            <nb-icon icon=\"close-outline\" style=\"float:right\"></nb-icon>\n        </button>\n    </nb-card-header>\n    <nb-card-body>\n        <nb-radio-group [(ngModel)]=\"radio\" name=\"invoice-number-generation\">\n            <nb-radio value=\"true\"  name=\"radio\">Automatically generate invoice\n                number\n                <form>\n                    <div class=\"row\">\n                        <div class=\"form-group\" formGroup=\"form\">\n                            <label for=\"prefix\" class=\"label\">Prefix</label>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <input type=\"text\" id=\"prefix\" placeholder=\"\" nbInput [(ngModel)]=\"prefix\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"current-number\" class=\"label\">Current Number</label>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <input type=\"text\" id=\"current-number\" placeholder=\"\" nbInput\n                                        [(ngModel)]=\"currentNumber\">\n                                </div>\n                                <!-- ERROR -->\n                                <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                                    <div class=\"error\">\n                                        <ul>\n                                            <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                            </li>\n                                            <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                                    characters.</small>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div> -->\n                            </div>\n                        </div>\n\n                    </div>\n                </form>\n\n            </nb-radio>\n\n            <nb-radio value=\"false\" name=\"radio\">Enter invoice number\n                everytime</nb-radio>\n\n\n        </nb-radio-group>\n        <div class=\"col-md-3\" style=\"padding-top: 15px;padding-bottom: 15px;\">\n            <button nbButton status=\"primary\" (click)=\"onSubmitClicked()\">Update</button>\n        </div>\n        <!-- <nb-radio-group name=\"gender\" [(ngModel)]=\"gender\">\n            <nb-radio value=\"male\" name=\"gender\">Male</nb-radio>\n            <nb-radio value=\"female\" name=\"gender\">Female</nb-radio>\n        </nb-radio-group> -->\n        <input type=\"text\" [(ngModel)]=\"price\">\n        <pre>{{radio}}</pre>\n    </nb-card-body>\n</nb-card>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DatabaseService } from 'src/app/services/database/database.service';\nimport { InvoiveNumberService } from '../invoive.service';\nimport { parts } from './parts';\nimport { NbDialogRef } from '@nebular/theme';\n\n\n\n\n@Component({\n  selector: 'app-invoice-parts',\n  templateUrl: './invoice-parts.component.html',\n  styleUrls: ['./invoice-parts.component.scss']\n})\nexport class InvoicePartsComponent implements OnInit {\n  selectedItem = '2';\n  form: FormGroup;\n  parts: any = [];\n  part:parts;\n  get batch() {\n    return this.form.get('batch');\n  }\n  get quantity() {\n    return this.form.get('quantity');\n  }\n  get package() {\n    return this.form.get('package');\n  }\n  // get batchNumber() {\n  //   return this.form.get('weight');\n  // }\n  constructor(\n    private fb: FormBuilder,private db: DatabaseService,    private data: InvoiveNumberService, protected ref:NbDialogRef<InvoicePartsComponent>,\n\n  ) { \n    this.db.getParts().subscribe((partData) => {\n      this.parts = partData;\n    });\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      quantity: [''],\n      batch:[''],\n      package:['']\n    });\n  }\n\n \n\n  updatePart(part:parts){\n    // console.log(\"update\");\n    this.part = part;\n    // this.parts = part;\n  }\n\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit(obj:any) {\n    console.log(obj[0]);\n    console.log(obj[1].value);\n    this.ref.close(obj);\n  }\n}","export class parts{\n    id:any;\n    cycleTime:any;\n    name:any;\n    price:any;\n    customer:any;\n\n    parts(data:any){\n        this.id = data.id;\n        this.name = data.id;\n        this.cycleTime = data.cycleTime;\n        this.customer = data.customer;\n        this.price = data.price;\n    }\n}","import { Component, ChangeDetectionStrategy,EventEmitter, ViewChild, OnInit,Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location, NumberSymbol } from '@angular/common';\nimport { NbDialogService } from '@nebular/theme';\nimport { InvoiceNumberComponent } from './invoice-number/invoice-number.component';\nimport { InvoiceService } from './invoice.service';\nimport { Variable } from '@angular/compiler/src/render3/r3_ast';\nimport { InvoicePartsComponent } from './invoice-parts/invoice-parts.component';\n// import { InvoiveNumberService } from './invoive.service';\nimport { parts } from './invoice-parts/parts';\nimport { DatabaseService } from '../services/database/database.service';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { ToastService } from 'src/app/ui/toast.service';\n\n@Component({\n  selector: 'app-invoice',\n  templateUrl: './invoice.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./invoice.component.scss']\n})\n\n\n\n\nexport class InvoiceComponent implements OnInit {\n  @Output() event = new EventEmitter<string>();\n  autoManual: boolean = false;\n  name: Variable;\n  parts:any;\n  customers:any;\n  message = \"Manual\";\n  autoValue: string;\n  number: string;\n  // ngModelDate = new Date();\n  itemList: any = [];\n  p: any;\n  selectedItem = '1';\n  selectedItemButton = '2';\n  \n\n  numbers = new Array(1, 4, 9);\n \n\n  get date() {\n    return this.form.get('date');\n  }\n  get description() {\n    return this.form.get('description');\n  }\n\n  get poNumber() {\n    return this.form.get('poNumber');\n  }\n  get InvoiceNumber() {\n    return this.form.get('InvoiceNumber');\n  }\n\n  get batch() {\n    return this.form.get('batch');\n  }\n\n  get quantity() {\n    return this.form.get('quantity');\n  }\n  get package() {\n    return this.form.get('package');\n  }\n  get rm_name() {\n    return this.form.get('rm_name');\n  }\n  get customer() {\n    return this.form.get('customer');\n  }\n  get material() {\n    return this.form.get('material');\n  }\n  get partName() {\n    return this.form.get('part');\n  }\n  get partNumber() {\n    return this.form.get('number');\n  }\n\n\n  private selectedId: string;\n  selectedObject: any;\n  option: any = 'FG';\n  form: FormGroup;\n  validity = true;\n  part: number;\n  partOptions: string[] = [];\n  partsFiltered$: Observable<any[]>;\n  customersFiltered$: Observable<any[]>;\n  \n  @ViewChild('autoInput') input;\n  constructor(\n    private fb: FormBuilder,\n    private db: DatabaseService,\n    private toast: ToastService,\n    private location: Location,\n    private dialogService: NbDialogService,\n    private data: InvoiceService,\n    private route: ActivatedRoute,\n  ) {\n  }\n\n  ngOnInit(): void {\n    console.log(\"1\");\n    this.data.currentMessage.subscribe(message => this.updatemode(message));\n    this.data.currentInvoice.subscribe(message => this.updateNumber(message));\n    this.data.currentPart.subscribe(parts => this.updateParts(parts));\n    // this.data.currentPart.subscribe(part=>this.updateParts(part));\n    this.route.paramMap.subscribe((params: ParamMap) => { \n      this.selectedId = params.get('id');\n      this.fetchObject();\n      this.loadPartsList();\n      this.loadCustomersList();\n    });\n    this.form = this.fb.group({\n      InvoiceNumber: [''],\n      poNumber: [''],\n      date: [''],\n      customer:[''], \n      description: [''],\n      rm_name: [''],\n      partName: [''],\n      partNumber: [''],\n      rate:[''],\n      quantity:[''],\n      packingDetails:['']\n    });\n    this.form.valueChanges.subscribe(() => {\n      this.validity = this.form.valid;\n    });\n\n  }\n  \n\n  private loadCustomersList() {\n    this.db.getCustomers()\n      .subscribe((list: any) => {\n        this.customersFiltered$ = of(list);\n      })\n  }\n  private loadPartsList() {\n    this.db.getParts()\n      .subscribe((list: any) => {\n        this.partOptions = list;\n        this.partsFiltered$ = of(list);\n      })\n  }\n  \n  // CUSTOMER NAME FILTER\n\n  private filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.partOptions.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n  }\n\n  // PART NAME FILTER \n  private value(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.partOptions.filter(optionValue => optionValue.toLowerCase().includes(filterValue))\n  }\n\n  getFilteredOptions(value: string): Observable<string[]> {\n    return of(value).pipe(\n      map(filterString => this.filter(filterString)),\n    );\n  }\n\n  // getFilterOptions(value: string): Observable<string[]> {\n  //   return of(value).pipe(\n  //     map(filterString => this.value(filterString)),\n  //   );\n  // }\n\n\n\n  open() {\n    this.dialogService.open(InvoiceNumberComponent);\n  }\n\n  openPart() {\n    this.itemList.push(undefined);\n  }\n    // this.dialogService.open(InvoicePartsComponent).onClose.subscribe(\n    //   part => {\n    //     this.itemList.push(part);\n    //     console.log(part);\n    //   }\n    // );\n  \n  onDataChange(): void {\n    this.customersFiltered$ = this.getFilteredOptions(this.input.nativeElement.value);\n  }\n  onSelectionChange($event) {\n    console.log($event.name);\n    this.customersFiltered$ = this.getFilteredOptions($event.name);\n  }\n\n  onItemChange(): void {\n    this.partsFiltered$ = this.getFilteredOptions(this.input.nativeElement.value);\n  }\n  onSelectChange($event) {\n    this.partsFiltered$ = this.getFilteredOptions($event);\n  }\n\n  recieveMessage($event) {\n    this.message = $event;\n  }\n  onDismissClicked() {\n    this.event.emit('dismiss');\n    this.location.back();\n  }\n\n  updatemode(msg: string) {\n    if (msg != null) {\n      this.message = msg;\n      if (this.message == \"Auto\") {\n        this.autoManual = true;\n      }\n      else {\n        this.autoManual = false;\n      }\n    }\n  }\n\n  updateNumber(msg: string) {\n    if (msg != \"\") {\n      this.number = msg;\n    }\n  }\n  \n\n  \n  updateParts(part: parts) {\n    console.log(part);\n    if (part != null) {\n      this.itemList.push(part);\n    }\n\n  }\n  fetchObject() {\n    if (this.selectedId) {\n      console.log(this.selectedObject)\n      this.selectedObject = this.db.getPart(this.selectedId);\n      this.selectedObject.subscribe((data: any) => {\n        this.form.patchValue({\n          name: data.name,\n          description: data.description,\n          code: data.code,\n          partWeight: data.partWeight,\n          shotWeight: data.shotWeight,\n          cycleTime: data.cycleTime,\n          cavity: data.cavity,\n          inventoryType: data.inventoryType,\n          customer: data.customer,\n          nextOperation: data.nextOperation,\n          price: data.price,\n          rm_name: data.rm_name,\n          partName: data.partName,\n          rate: data.rate,\n          quantity:data.quantity,\n          packingDetails:data.packingDetails,\n        });\n      });\n    }\n  }\n\n\n\n// ONSUBMIT\nonButton() {\n  console.log(this.form.value)\n    this.db.addInvoice(this.form.value, this.selectedId)\n      .then(() => {\n        this.toast.success('Invoice updated succesfully');\n        this.form.reset();\n        if (this.selectedId) {\n          this.location.back();\n        }\n      });\n    }\n  }\n","\n\n<nb-card>\n    <nb-card-header>Invoice Details</nb-card-header>\n    <nb-card-body>\n        <!-- <h1>{{message}}</h1> -->\n        <form [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <label for=\"number\" class=\"label\">Invoice Number</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\" *ngIf=\"autoManual\" >\n                        {{number}}\n                        <!-- <input disabled=\"true\" formControlName=\"InvoiceNumber\" type=\"text\" id=\"number\" [(ngModel)]=\"number\" nbInput> -->\n                    </div>\n                    <div class=\"col-md-6\" *ngIf=\"!autoManual\">\n                        <input formControlName=\"invoiceNumber\" type=\"text\" id=\"number\" placeholder=\"eg-SIG10\" nbInput>\n                    </div>\n                    \n                        <button nbButton status=\"primary\" (click)=\"open()\"><nb-icon icon=\"edit\"></nb-icon></button>\n                </div>\n            </div>\n            <div class= \"row\">\n                <div style=\"padding-left: 15px;\"></div>\n                <div class=\"form-group\">\n                    <label for=\"date\" class=\"label\">Invoice Date</label>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <input nbInput placeholder=\"Pick Date\" [nbDatepicker]=\"dateTimePicker\" formControlName=\"date\">\n                            <nb-datepicker #dateTimePicker></nb-datepicker>\n                        </div>\n                        <!-- ERROR -->\n                        <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                            <div class=\"error\">\n                                <ul>\n                                    <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                    </li>\n                                    <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                            characters.</small>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div> -->\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"po\" class=\"label\">PO Number</label>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <input formControlName=\"poNumber\" type=\"text\" id=\"po\" placeholder=\"\" nbInput>\n                        </div>\n                        <!-- ERROR -->\n                        <!-- <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                            <div class=\"error\">\n                                <ul>\n                                    <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                    </li>\n                                    <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                            characters.</small>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div> -->\n                    </div>\n                </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"rm_name\" class=\"label\">Customer</label>\n                    <div class=\"row\">\n                        <div class=\"col-md-4\">\n                            <input type=\"text\" #autoInput\n                                [class.is-invalid]=\"description.invalid && (description.dirty || description.touched)\"\n                                nbInput fullWidth formControlName=\"rm_name\" id=\"rm_name\" (input)=\"onDataChange()\"\n                                placeholder=\"eg-Mando\" [nbAutocomplete]=\"auto\">\n                            <nb-autocomplete #auto (selectedChange)=\"onSelectionChange($event)\">\n    \n                                <nb-option *ngFor=\"let option of customersFiltered$ | async\" [value]=\"option.name\">\n                                    {{ option.name }}\n                                </nb-option>\n    \n                            </nb-autocomplete>\n                        </div>\n                    </div>\n                </div>\n            \n        </form>\n\n        \n\n    </nb-card-body>\n\n    \n</nb-card>\n\n<div class=\"col-md-3\" style=\"padding-top: 15px;padding-bottom: 15px;\">\n    <button nbButton status=\"primary\" (click)=\"openPart()\">\n        <nb-icon icon=\"plus\"></nb-icon>Add Part\n    </button>\n</div>\n\n<nb-card>\n    <table style=\"width: 100%;\" [formGroup]=\"form\">\n        <tr style=\"text-align: center;\">\n\n            <td>\n                <label for=\"text\" class=\"label\">Part no/Part name</label>\n                <!--<input class=\"package\" style=\"margin-bottom: 20px; width: 80%; height: 40px;\"s type=\"text\" id=\"package\" placeholder=\"\" nbInput>-->\n            </td>\n            <!--<th>\n                <h6>Part Name</h6>\n                <input class=\"batch\" style=\"margin-bottom: 20px; width: 80%; height: 40px;\" type=\"text\" id=\"batch\" placeholder=\"Enter part.name\" nbInput>\n            </th>-->\n            <td>\n                <label for=\"text\" class=\"label\">Batch no</label>\n                <!--<input class=\"package\" style=\"margin-bottom: 20px; width: 80%; height: 40px;\"s type=\"text\" id=\"package\" placeholder=\"\" nbInput>-->\n            </td>\n            <td>\n                <label for=\"text\" class=\"label\">Rate</label>\n\n            </td>\n            <td>\n                <label for=\"text\" class=\"label\">Quantity</label>\n                <!--<input class=\"package\" style=\"margin-bottom: 20px; width: 80%; height: 40px;\"s type=\"text\" id=\"package\" placeholder=\"\" nbInput>-->\n            </td>\n            <td>\n                <label for=\"text\" class=\"label\">Amount</label>\n            </td>\n            <td>\n                <label for=\"text\" class=\"label\">Tax</label>\n            </td>\n\n            <td>\n                <label for=\"text\" class=\"label\">Packaging Details</label>\n                <!--<input class=\"package\" style=\"margin-bottom: 20px; width: 80%; height: 40px;\"s type=\"text\" id=\"package\" placeholder=\"\" nbInput>-->\n            </td>\n\n        </tr>\n        <tr *ngFor=\"let part of itemList\" style=\"text-align: center;\">\n\n            <td>\n                <!--<p>{{part[0].code}}\\{{part[0].name}}<input class=\"package\" style=\"margin-bottom: 20px; width: 80%; height: 40px;\"s type=\"text\" id=\"package\" placeholder=\"\" nbInput>-->\n                <input type=\"text\" style=\"margin-bottom: 20px; width: 80%; height: 40px;\" s #autoInput\n                    [class.is-invalid]=\"description.invalid && (description.dirty || description.touched)\" nbInput\n                    fullWidth formControlName=\"partName\" id=\"partName\" (input)=\"onDataChange()\" placeholder=\"eg-GB LHD\"\n                    [nbAutocomplete]=\"auto\">\n                <nb-autocomplete #auto (selectedChange)=\"onSelectChange($event)\">\n\n                    <nb-option *ngFor=\"let option of partsFiltered$ | async\" [value]=\"option.name\" [formGroup]=\"form\">\n                        {{ option.name }}/{{option.code}}\n                    </nb-option>\n\n                </nb-autocomplete>\n            </td>\n            <!--<td>\n                {{part[0].name}}\n            </td>-->\n            <td>\n\n                <!--{{part[1]}}{{part[2]}}--><input class=\"package\"\n                    style=\"margin-bottom: 20px; width: 80%; height: 40px;\" type=\"text\" id=\"package\" placeholder=\"\"\n                    nbInput>\n            </td>\n            <td>\n                <p>rate</p>\n\n            </td>\n            <td>\n                <!--{{part[0].price}}--><input class=\"Quantity\" style=\"margin-bottom: 20px; width: 40%; height: 40px;\"\n                    type=\"text\" id=\"Quantity\" placeholder=\"\" nbInput>\n            </td>\n            <td>\n                <p>amount</p>\n            </td>\n            <!-- TAX SLAB -->\n            <td>\n                <select\n                    style=\"margin-bottom: 20px; width: 70%; height: 40px; background-color: rgb(5, 5, 5); color: rgb(245, 238, 238); border: rgb(5, 5, 5);\"\n                    placeholder=\"eg. 0%\">\n                    <option disabled>Select a Tax</option>\n                    <option value=\"0\">0%</option>\n                    <option value=\"5\">5%</option>\n                    <option value=\"12\">12%</option>\n                    <option value=\"18\">18%</option>\n                    <option value=\"28\">28%</option>\n                </select>\n            </td>\n            <td>\n                <!--{{part[3]}}--><input class=\"package\" style=\"margin-bottom: 20px; width: 80%; height: 40px;\"\n                    type=\"text\" id=\"package\" placeholder=\"\" nbInput>\n            </td>\n        <tr>\n\n\n    </table>\n</nb-card>\n\n\n\n\n\n  <div class=\"row\">\n      <div style=\"margin-left: 16px;\"></div>\n      <nb-card class=\"col-md-6\">\n        <p style=\"font-weight: bold;\">Terms & Conditions</p>\n        <textarea nbInput fullWidth placeholder=\"Enter the terms and conditions of your business to be displayed in your transaction\" style=\"margin-bottom: 20px; height: 150px;\"></textarea>\n      </nb-card>\n      <div style=\"margin-left: 30px;\"></div>\n      <nb-card class=\"col-md-5\">\n        <div class=\"row\">\n            <p style=\"font-weight: bold; margin-left:25px;\">Subtotal</p>\n            <div class=\"col-md-7\"></div>\n            <p>0.00</p>\n        </div>\n        <div class=\"row\">\n            <p style=\"font-weight: bold; margin-left:25px;\">TCS</p>\n            <nb-select class=\"col-md-2\" placeholder=\"Select Showcase\" [(selected)]=\"selectedItem\">\n                <nb-option value=\"\">Select a Tax</nb-option>\n                <nb-option value=\"0\">CGST/SGST</nb-option>\n                <nb-option value=\"1\">IGST</nb-option>\n              </nb-select>\n            <p>0.00</p>\n        </div>\n        <div class=\"row\" >\n            <p style=\"font-weight: bold; margin-left:25px;\">Shipping Cost</p>\n            <div class=\"col-md-5\"></div> \n            <input type=\"text\" style=\"margin-bottom: 10px; width: 20%; height: 40px; \" nbInput>\n        </div>\n        <div class=\"row\">\n            <p style=\"font-weight: bold; margin-left:25px;\">Total</p>\n            <div class=\"col-md-8\"></div>\n            <p>0.00</p>\n        </div>\n      </nb-card>\n  </div>\n  <div>\n\n    <div class=\"row\">\n        <div style=\"margin-left: 18px;\"></div>\n        <nb-select status=\"primary\" placeholder=\"Select Showcase\" [(selected)]=\"selectedItemButton\">\n            <nb-option status=\"primary\" value=\"\">Save and Send</nb-option>\n            <nb-option status=\"primary\" value=\"0\"><a routerLink=\"/print\">Save and Print</a></nb-option>\n            <nb-option status=\"primary\" value=\"1\">Save and Share</nb-option>\n            <nb-option status=\"primary\" value=\"2\">Save and Send Later</nb-option>\n        </nb-select>\n        <div class=\"col-md-1\"></div>\n        <button nbButton status=\"primary\" (click)=\"onButton()\">Save as Draft</button>\n        <div class=\"col-md-1\"></div>\n        <button  nbButton status=\"primary\"(click)=\"onDismissClicked()\">\n            <span>Cancel</span>\n        </button>\n    </div>\n\n</div>\n<!-- FOOTER -->\n<!-- <ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer> -->","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { parts } from \"./invoice-parts/parts\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceService {\n  private messagesource = new BehaviorSubject<string>(\"DefaultMessage\");\n  currentMessage = this.messagesource.asObservable();\n  \n  private invoiceSource = new BehaviorSubject<string>(\"DefaultMessage\");\n  currentInvoice = this.invoiceSource.asObservable();\n\n  private partSource = new BehaviorSubject<parts>(new parts);\n  currentPart = this.partSource.asObservable();\n  \n  constructor(){}\n  changeMessage(message: string){\n      this.messagesource.next(message);\n  }\n  changeInvoice(message: string){\n      this.invoiceSource.next(message);\n  }\n\n  addPart(part: parts){\n      console.log(part);\n      this.partSource.next(part);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { parts } from \"./invoice-parts/parts\";\n\n@Injectable({\n    providedIn: 'root',\n  })\n  \nexport class InvoiveNumberService{\n    private messagesource = new BehaviorSubject<string>(\"DefaultMessage\");\n    currentMessage = this.messagesource.asObservable();\n    \n    private invoiceSource = new BehaviorSubject<string>(\"DefaultMessage\");\n    currentInvoice = this.invoiceSource.asObservable();\n\n    private partSource = new BehaviorSubject<parts>(new parts);\n    currentPart = this.partSource.asObservable();\n    \n    constructor(){}\n    changeMessage(message: string){\n        this.messagesource.next(message);\n    }\n    changeInvoice(message: string){\n        this.invoiceSource.next(message);\n    }\n\n    addPart(part: parts){\n        console.log(part);\n        this.partSource.next(part);\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-print',\n  templateUrl: './print.component.html',\n  styleUrls: ['./print.component.scss']\n})\nexport class PrintComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    let printContents = document.getElementById(\"print-layout\").innerHTML;\n    let originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    document.body.innerHTML = originalContents;\n  }\n\n}\n","<table id=\"print-layout\">\n    <thead><tr><td>\n      <div class=\"header-space\">&nbsp;</div>\n    </td></tr></thead>\n    <tbody><tr><td>\n      <div class=\"content\">\n        <router-outlet></router-outlet>\n      </div>\n    </td></tr></tbody>\n    <tfoot><tr><td>\n      <div class=\"footer-space\">&nbsp;</div>\n    </td></tr></tfoot>\n  </table>\n  \n  <div class=\"header\">COOL HEADER</div>\n  <div class=\"footer\">AWESOME FOOTER</div>","import { ToastService } from './../../ui/toast.service';\nimport { DatabaseService } from './../../services/database/database.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-machine-edit',\n  templateUrl: './machine-edit.component.html',\n  styleUrls: ['./machine-edit.component.scss']\n})\nexport class MachineEditComponent implements OnInit {\n  // GETTERS AND SETTERS\n  get name() {\n    return this.form.get('name');\n  }\n  get code() {\n    return this.form.get('code');\n  }\n  get make() {\n    return this.form.get('make');\n  }\n  get email() {\n    return this.form.get('email');\n  }\n\n  private selectedId: string;\n  selectedObject: any;\n  option: any = 'moulding';\n  // DECLARATIONS\n  form: FormGroup;\n  mouldingMachineParams: FormGroup;\n  validity = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private db: DatabaseService,\n    private toast: ToastService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.selectedId = params.get('id');\n      this.fetchObject();\n    });\n    this.form = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      code: ['', [Validators.required, Validators.minLength(3)]],\n      make: ['', Validators.required],\n      machineType: [''],\n      dimensions: this.fb.group({\n        length: [''],\n        width: [''],\n        height: ['']\n      }),\n    });\n\n    this.mouldingMachineParams = this.fb.group({\n      tonnage: [''],\n      tieBarDistance: [''],\n      plattenSize: this.fb.group({\n        length: [''],\n        width: ['']\n      }),\n      screwSize: [''],\n      maxShotWt: ['']\n    });\n\n    this.form.valueChanges.subscribe(() => {\n      this.validity = this.form.valid;\n    });\n\n  }\n  onChange() {\n\n  }\n\n  fetchObject() {\n    if (this.selectedId) {\n      this.selectedObject = this.db.getMachine(this.selectedId);\n      this.selectedObject.subscribe((data: any) => {\n        this.option = data.machineType;\n        this.form.patchValue({\n          name: data.name,\n          code: data.code,\n          make: data.make,\n          machineType: data.machineType,\n          dimensions: data.dimensions\n        });\n        if (this.option === 'moulding') {\n          this.mouldingMachineParams.patchValue({\n            tonnage: data.tonnage,\n            tieBarDistance: data.tieBarDistance,\n            plattenSize: data.plattenSize,\n            screwSize: data.screwSize,\n            maxShotWt: data.maxShotWt\n          });\n        }\n      });\n    }\n  }\n  // ONSUBMIT\n  onButtonClicked(clickedButton) {\n\n    if (clickedButton === 'save') {\n      let data;\n      if (this.form.value.machineType === 'moulding') {\n        data = Object.assign(this.form.value, this.mouldingMachineParams.value);\n      } else {\n        data = this.form.value;\n      }\n      this.db.addMachine(data, this.selectedId)\n        .then(() => {\n          this.toast.success('Machine updated succesfully');\n          this.form.reset();\n          this.mouldingMachineParams.reset();\n          if (this.selectedId) {\n            this.location.back();\n          }\n        });\n    }\n  }\n\n}\n","<nb-card>\n    <nb-card-header>Machine Details</nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <!-- NAME -->\n                <label for=\"name\" class=\"label\">Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput\n                            fullWidth formControlName=\"name\" id=\"name\" placeholder=\"eg. E120T\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"code\" class=\"label\">Code</label>\n                <div class=\"row\">\n                    <div class=\"col-md-3\">\n                        <input type=\"text\" [class.is-invalid]=\"code.invalid && (code.dirty || code.touched)\" nbInput\n                            fullWidth formControlName=\"code\" id=\"code\" placeholder=\"eg. MC-T-1\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"code.invalid && (code.dirty || code.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"code.errors?.required\"> <small>Please enter code of the Machine</small>\n                                </li>\n                                <li *ngIf=\"code.errors?.minlength\"> <small>Machine code should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"make\" class=\"label\">Make</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"make.invalid && (make.dirty || make.touched)\" nbInput\n                            fullWidth formControlName=\"make\" id=\"make\" placeholder=\"eg. Engel\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"make.invalid && (make.dirty || make.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"make.errors?.required\"> <small>Please enter a make.</small>\n                                </li>\n                                <li *ngIf=\"make.errors?.minlength\"> <small>Make should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </form>\n\n    </nb-card-body>\n</nb-card>\n\n<nb-card>\n    <nb-accordion>\n        <nb-accordion-item>\n            <nb-card-header>Machine Details</nb-card-header>\n            <nb-card-body>\n            </nb-card-body>\n\n        </nb-accordion-item>\n        <nb-accordion-item>\n            <nb-accordion-item-header>Operational Details</nb-accordion-item-header>\n            <nb-accordion-item-body>\n                <form [formGroup]=\"form\">\n                    <!-- TYPE OF MACHINE -->\n                    <div class=\"form-group\">\n                        <label for=\"inventoryType\" class=\"label\">Type of machine</label>\n                        <div class=\"row radio-section\">\n\n                            <div class=\"col radio-option\">\n                                <label>\n                                    <input type=\"radio\" [(ngModel)]=\"option\" (change)=\"onChange()\" id=\"WIP\"\n                                        formControlName=\"machineType\" value=\"moulding\" checked>\n                                    <div class=\"card radio-card\" for=\"control_01\">\n                                        <img class=\"\" src=\"/assets/app/moulding.svg\" alt=\"Card image cap\">\n                                        <div class=\"card-body\">\n                                            <p class=\"card-title text-center label\">Moulding</p>\n                                        </div>\n                                    </div>\n                                </label>\n                            </div>\n                            <div class=\"col radio-option\">\n                                <label>\n                                    <input type=\"radio\" [(ngModel)]=\"option\" (change)=\"onChange()\" id=\"FG\"\n                                        formControlName=\"machineType\" value=\"squeezing\">\n                                    <div class=\"card radio-card\" for=\"control_02\">\n                                        <img class=\"card-img-top\" src=\"/assets/app/squeezing.svg\" alt=\"Card image cap\">\n                                        <div class=\"card-body\">\n                                            <p class=\"card-title text-center label\">Squeezing</p>\n                                        </div>\n                                    </div>\n                                </label>\n                            </div>\n                            <div class=\"col radio-option\">\n                                <label>\n                                    <input type=\"radio\" [(ngModel)]=\"option\" (change)=\"onChange()\" id=\"FG\"\n                                        formControlName=\"machineType\" value=\"welding\">\n                                    <div class=\"card radio-card\" for=\"control_02\">\n                                        <img class=\"card-img-top\" src=\"/assets/app/welding.svg\" alt=\"Card image cap\">\n                                        <div class=\"card-body\">\n                                            <p class=\"card-title text-center label\">Welding</p>\n                                        </div>\n                                    </div>\n                                </label>\n                            </div>\n                            <div class=\"col radio-option\">\n                                <label>\n                                    <input type=\"radio\" [(ngModel)]=\"option\" (change)=\"onChange()\" id=\"FG\"\n                                        formControlName=\"machineType\" value=\"Testing\">\n                                    <div class=\"card radio-card\" for=\"control_02\">\n                                        <img class=\"card-img-top\" src=\"/assets/app/testing.svg\" alt=\"Card image cap\">\n                                        <div class=\"card-body\">\n                                            <p class=\"card-title text-center label\">Testing</p>\n                                        </div>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                <form [formGroup]=\"form\">\n                    <!-- MACHINE DIMENSIONS -->\n                    <div class=\"form-group\" formGroupName=\"dimensions\">\n                        <label for=\"name\" class=\"label\">Machine dimensions</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"row\">\n                                    <!-- LENGTH -->\n                                    <div class=\"col-4\">\n                                        <div style=\"text-align: center;\">\n                                            <label for=\"name\" class=\"label\"><small>length</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\" formControlName=\"length\"\n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\">\n                                            <span nbSuffix>cm</span>\n                                        </nb-form-field>\n                                    </div>\n                                    <div class=\"label\">\n                                        <span style=\"position: absolute; top: 50%;\">X</span>\n                                    </div>\n                                    <!-- WIDTH -->\n                                    <div class=\"col-4\">\n                                        <div style=\"text-align: center;\">\n                                            <label for=\"name\" class=\"label\"><small>width</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\" formControlName=\"width\"\n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\">\n                                            <span nbSuffix>cm</span>\n                                        </nb-form-field>\n                                    </div>\n                                    <div class=\"label\">\n                                        <span style=\"position: absolute; top: 50%;\">X</span>\n                                    </div>\n                                    <!-- HEIGHT -->\n                                    <div class=\"col-4\">\n                                        <div style=\"text-align: center;\">\n                                            <label for=\"name\" class=\"label\"><small>height</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\" formControlName=\"height\"\n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\">\n                                            <span nbSuffix>cm</span>\n                                        </nb-form-field>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                        </li>\n                                        <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                <form [formGroup]=\"mouldingMachineParams\">\n                    <!-- TONNAGE -->\n                    <div class=\"form-group\" *ngIf=\"option=='moulding'\">\n                        <label for=\"name\" class=\"label\">Tonnage</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <input type=\"text\" formControlName=\"tonnage\"\n                                    [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput fullWidth\n                                    id=\"tonnage\" placeholder=\"eg. 60\">\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                        </li>\n                                        <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- TIE BAR DISTANCE -->\n                    <div class=\"form-group\" *ngIf=\"option=='moulding'\">\n                        <label for=\"name\" class=\"label\">Tie bar distance</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-2\">\n                                <nb-form-field>\n                                    <input type=\"number\" formControlName=\"tieBarDistance\"\n                                        [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput\n                                        fullWidth id=\"make\">\n                                    <span nbSuffix>cm</span>\n                                </nb-form-field>\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                        </li>\n                                        <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- PLATTTEN SIZE -->\n                    <div class=\"form-group\" formGroupName=\"plattenSize\" *ngIf=\"option=='moulding'\">\n                        <label for=\"name\" class=\"label\">Platten size</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"row\">\n                                    <div class=\"col-4\">\n                                        <div style=\"text-align: center;\">\n                                            <label for=\"name\" class=\"label\"><small>length</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\" formControlName=\"length\"\n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\">\n                                            <span nbSuffix>cm</span>\n                                        </nb-form-field>\n\n                                    </div>\n                                    <div class=\"label\">\n                                        <span style=\"position: absolute; top: 50%;\">X</span>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <div style=\"text-align: center;\">\n                                            <label for=\"name\" class=\"label\"><small>width</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\" formControlName=\"width\"\n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\">\n                                            <span nbSuffix>cm</span>\n                                        </nb-form-field>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                        </li>\n                                        <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- SCREW SIZE -->\n                    <div class=\"form-group\" *ngIf=\"option=='moulding'\">\n                        <label for=\"name\" class=\"label\">Screw size</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-2\">\n                                <nb-form-field>\n                                    <input type=\"number\" formControlName=\"screwSize\"\n                                        [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput\n                                        fullWidth id=\"make\">\n                                    <span nbSuffix>cm</span>\n                                </nb-form-field>\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                        </li>\n                                        <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- MAX SHOT WEIGHT -->\n                    <div class=\"form-group\" *ngIf=\"option=='moulding'\">\n                        <label for=\"name\" class=\"label\">Maximum shot weight</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-2\">\n                                <nb-form-field>\n                                    <input type=\"number\" formControlName=\"maxShotWt\"\n                                        [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput\n                                        fullWidth id=\"make\">\n                                    <span nbSuffix>g </span>\n                                </nb-form-field>\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                        </li>\n                                        <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n\n            </nb-accordion-item-body>\n        </nb-accordion-item>\n        <nb-accordion-item>\n            <nb-accordion-item-header>Maintanence Details</nb-accordion-item-header>\n            <nb-accordion-item-body>\n                Item Content\n            </nb-accordion-item-body>\n        </nb-accordion-item>\n        <nb-accordion-item>\n            <nb-accordion-item-header>Other Details</nb-accordion-item-header>\n            <nb-accordion-item-body>\n                Item Content\n            </nb-accordion-item-body>\n        </nb-accordion-item>\n    </nb-accordion>\n</nb-card>\n\n<!-- <pre>{{form.value | json}}</pre> -->\n<!-- <pre>{{mouldingMachineParams.value | json}}</pre> -->\n<!-- FOOTER -->\n<ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer>","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from 'src/app/services/database/database.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-machine-list',\n  templateUrl: './machine-list.component.html',\n  styleUrls: ['./machine-list.component.scss']\n})\nexport class MachineListComponent implements OnInit {\n  sort: any = '1';\n  data: any = [];\n\n  constructor(private db: DatabaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.db.getMachines().subscribe((data) => {\n      this.data = data;\n    });\n\n  }\n\n  onItemSelected(item) {\n    console.log(item.id);\n    this.router.navigate([`/machines/${item.id}`]);\n    // this.router.navigate([`/materials/${product.id}`]);\n  }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <button nbButton size=\"small\" routerLink='/machines/new' status=\"primary\">New Machine</button>\n    </div>\n    <!-- <div class=\"col-2\"> -->\n    <!-- <nb-select size=\"small\" style=\"margin-left:auto\" [(selected)]='sort' status=\"basic\">\n        <nb-option value=\"1\">name</nb-option>\n        <nb-option value=\"2\">Option 2</nb-option>\n        <nb-option value=\"3\">Option 3</nb-option>\n        <nb-option value=\"4\">Option 4</nb-option>\n    </nb-select> -->\n    <!-- </div> -->\n\n    <nb-actions class=\"col-6\">\n        <nb-action icon=\"search-outline\"></nb-action>\n        <nb-action icon=\"power-outline\"> Views</nb-action>\n        <nb-action icon=\"person-outline\"></nb-action>\n        <nb-action icon=\"home-outline\"></nb-action>\n    </nb-actions>\n</div>\n<ui-list-view [list]=\"data\" (onclick)=\"onItemSelected($event)\"></ui-list-view>","import { ToastService } from './../../ui/toast.service';\nimport { DatabaseService } from './../../services/database/database.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-material-edit',\n  templateUrl: './material-edit.component.html',\n  styleUrls: ['./material-edit.component.scss']\n})\nexport class MaterialEditComponent implements OnInit {\n\n  options: any[];\n  filteredOptions$: Observable<any[]>;\n\n  @ViewChild('autoInput') input;\n\n  get rmCategory() {\n    return this.rmForm.get('rmCategory');\n  }\n  get grade() {\n    return this.rmForm.get('grade');\n  }\n  get color() {\n    return this.rmForm.get('color');\n  }\n\n  get partNumber() {\n    return this.boForm.get('partNumber');\n  }\n\n\n  private selectedId: string;\n  selectedObject: any;\n  option: any = 'Raw Material';\n  rmForm: FormGroup;\n  boForm: FormGroup;\n  validity = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private db: DatabaseService,\n    private toast: ToastService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) { }\n  rmName = '';\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.selectedId = params.get('id');\n      this.fetchObject();\n    });\n\n    this.boForm = this.fb.group({\n      typeOfMaterial: ['Bought Out'],\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      description: [''],\n      partNumber: ['', Validators.required],\n      vendor: ['', Validators.required],\n      price: ['', Validators.required],\n    });\n\n    this.rmForm = this.fb.group({\n      typeOfMaterial: ['Raw Material'],\n      name: [{ value: '', disabled: true }, [Validators.required, Validators.minLength(3)]],\n      rmCategory: ['', Validators.required],\n      grade: ['', Validators.required],\n      color: ['', Validators.required],\n      description: [''],\n      vendor: ['', Validators.required],\n      price: ['', Validators.required],\n    });\n\n    this.boForm.valueChanges.subscribe(() => {\n      this.validity = this.boForm.valid;\n    });\n\n    this.rmForm.valueChanges.subscribe((data) => {\n      this.validity = this.rmForm.valid;\n      this.setName();\n    });\n    // AUTO COMPLETE\n    this.db.getVendors().subscribe((data) => {\n      this.options = data;\n      // console.log(data);\n    });\n    this.filteredOptions$ = of(this.options);\n  }\n\n  fetchObject() {\n    if (this.selectedId) {\n      this.selectedObject = this.db.getMaterial(this.selectedId);\n      this.selectedObject.subscribe((data: any) => {\n        if (data.typeOfMaterial === 'Raw Material') {\n          this.option = 'Raw Material';\n          this.rmForm.setValue({\n            typeOfMaterial: data.typeOfMaterial,\n            name: data.name,\n            rmCategory: data.rmCategory,\n            grade: data.grade,\n            color: data.color,\n            description: data.description,\n            vendor: data.vendor,\n            price: data.price\n          });\n        } else if (data.typeOfMaterial === 'Bought Out') {\n          this.option = 'Bought Out';\n          this.boForm.setValue({\n            typeOfMaterial: data.typeOfMaterial,\n            name: data.name,\n            partNumber: data.partNumber,\n            description: data.description,\n            vendor: data.vendor,\n            price: data.price\n          });\n        }\n      });\n    }\n  }\n\n  setName() {\n    this.rmName = this.rmForm.get('rmCategory').value;\n    if (this.rmForm.get('grade').value) {\n      this.rmName = this.rmName + ' - ' + this.rmForm.get('grade').value;\n    }\n    if (this.rmForm.get('color').value) {\n      this.rmName = this.rmName + ' - ' + this.rmForm.get('color').value;\n    }\n    if (this.rmForm.get('description').value) {\n      this.rmName = this.rmName + ' (' + this.rmForm.get('description').value + ')';\n    }\n  }\n\n\n  // AUTO COMPLETE\n  onChange() {\n    this.filteredOptions$ = this.getFilteredOptions(this.input.nativeElement.value);\n  }\n\n  getFilteredOptions(value: string): Observable<string[]> {\n    return of(value).pipe(\n      map(filterString => this.filter(filterString)),\n    );\n  }\n\n  private filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(optionValue => optionValue.name.toLowerCase().includes(filterValue));\n  }\n\n  onSelectionChange($event) {\n    this.filteredOptions$ = this.getFilteredOptions($event);\n  }\n\n  // ONSUBMIT\n  onButtonClicked(clickedButton) {\n    if (clickedButton === 'save') {\n      if (this.option === 'Bought Out') {\n        this.db.addMaterial(this.boForm.value, this.selectedId)\n          .then(() => {\n            this.toast.success('Material updated succesfully');\n            this.boForm.reset();\n            this.rmForm.reset();\n            if (this.selectedId) {\n              this.location.back();\n            }\n          });\n      } else {\n        this.rmForm.value.name = this.rmName;\n        this.db.addMaterial(this.rmForm.value, this.selectedId)\n          .then(() => {\n            this.toast.success('Material updated succesfully');\n            this.boForm.reset();\n            this.rmForm.reset();\n            if (this.selectedId) {\n              this.location.back();\n            }\n          });\n      }\n    }\n  }\n\n}\n","<nb-card>\n    <nb-card-header>Material Details</nb-card-header>\n    <nb-card-body>\n        <!-- <form [formGroup]=\"form\"> -->\n        <!-- BO / RM RADIO -->\n        <div>\n            <label for=\"inventory\" class=\"label\">Type of material</label>\n            <div class=\"form-group col-md-6\">\n                <div class=\"row radio-section\">\n                    <div class=\"col radio-option\">\n                        <label>\n                            <input type=\"radio\" id=\"RM\" name=\"typeOfMaterial\" value=\"Raw Material\" [(ngModel)]=\"option\"\n                                checked>\n                            <div class=\"card radio-card\" for=\"control_02\">\n                                <img class=\"card-img-top\" src=\"/assets/app/raw-material.svg\" alt=\"Card image cap\">\n                                <div class=\"card-body\">\n                                    <p class=\"card-title text-center label\">Polymer</p>\n                                </div>\n                            </div>\n                        </label>\n                    </div>\n                    <div class=\"col radio-option\">\n                        <label>\n                            <input type=\"radio\" id=\"BO\" name=\"typeOfMaterial\" [(ngModel)]=\"option\" value=\"Bought Out\">\n                            <div class=\"card radio-card\" for=\"control_01\">\n                                <img class=\"\" src=\"/assets/app/bought-out.svg\" alt=\"Card image cap\">\n                                <div class=\"card-body\">\n                                    <p class=\"card-title text-center label\">Bought Out</p>\n                                </div>\n                            </div>\n                        </label>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        <!-- RAW MATERIAL -->\n\n        <form [formGroup]=\"rmForm\" *ngIf=\"option == 'Raw Material'\">\n            <!-- NAME -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" disabled [ngModelOptions]=\"{standalone: true}\" nbInput fullWidth id=\" name\"\n                            [ngModel]=\"rmName\">\n                    </div>\n                    <!-- ERROR   -->\n                    <div *ngIf=\"rmForm.get('name').invalid && (rmForm.get('name').dirty || rmForm.get('name').touched)\"\n                        class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"rmForm.get('name').errors?.required\"> <small>Please enter name of the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"rmForm.get('name').errors?.minlength\"> <small>Material Name should contain\n                                        atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- MATERIAL CATEGORY -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Raw Material</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\"\n                            [class.is-invalid]=\"rmCategory.invalid && (rmCategory.dirty || rmCategory.touched)\" nbInput\n                            fullWidth formControlName=\"rmCategory\" id=\"rmCategory\" placeholder=\"eg. PP - PolyPropylene\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"rmCategory.invalid && (rmCategory.dirty || rmCategory.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"rmCategory.errors?.required\"> <small>Please enter name of the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"rmCategory.errors?.minlength\"> <small>Material Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- GRADE -->\n            <div class=\"form-group\">\n                <label for=\"grade\" class=\"label\">Grade</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"grade.invalid && (grade.dirty || grade.touched)\" nbInput\n                            fullWidth formControlName=\"grade\" id=\"grade\" placeholder=\"eg. MI 3530\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"grade.invalid && (grade.dirty || grade.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"grade.errors?.required\"> <small>Please enter grade of the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"grade.errors?.minlength\"> <small>Material grade should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- COLOR -->\n            <div class=\"form-group\">\n                <label for=\"ncolorame\" class=\"label\">Color</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"color.invalid && (color.dirty || color.touched)\" nbInput\n                            fullWidth formControlName=\"color\" id=\"color\" placeholder=\"eg. Natural\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"color.invalid && (color.dirty || color.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"color.errors?.required\"> <small>Please enter color of the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"color.errors?.minlength\"> <small>Material color should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- DESCRIPTION -->\n            <div class=\"form-group\">\n                <label for=\"description\" class=\"label\">Description <small>(optional)</small></label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\"\n                            [class.is-invalid]=\"rmForm.get('description').invalid && (rmForm.get('description').dirty || rmForm.get('description').touched)\"\n                            nbInput fullWidth formControlName=\"description\" id=\"description\"\n                            placeholder=\"eg. 35% Long Fiber glass filled\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"rmForm.get('description').invalid && (rmForm.get('description').dirty || rmForm.get('description').touched)\"\n                        class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"rmForm.get('description').errors?.required\"> <small>Please enter description\n                                        for the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"rmForm.get('description').errors?.minlength\"> <small>Material description\n                                        should\n                                        contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- VENDOR -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Vendor</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\"\n                            [class.is-invalid]=\"rmForm.get('vendor').invalid && (rmForm.get('vendor').dirty || rmForm.get('vendor').touched)\"\n                            #autoInput nbInput (input)=\"onChange()\" fullWidth [nbAutocomplete]=\"auto\" autocomplete=\"off\"\n                            formControlName=\"vendor\" id=\"vendor\" placeholder=\"eg. Reliance Industries\" />\n                        <nb-autocomplete #auto (selectedChange)=\"onSelectionChange($event)\">\n                            <nb-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option.name\">\n                                {{ option.name }}\n                            </nb-option>\n\n                        </nb-autocomplete>\n\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"rmForm.get('vendor').invalid && (rmForm.get('vendor').dirty || rmForm.get('vendor').touched)\"\n                        class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"rmForm.get('vendor').errors?.required\"> <small>Please enter vendor of the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"rmForm.get('vendor').errors?.minlength\"> <small>Vendor should contain\n                                        atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- PRICE -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Price</label>\n                <div class=\"row\">\n                    <div class=\"col-md-2 col-5\">\n                        <nb-form-field>\n                            <span nbPrefix\n                                [class.is-invalid]=\"rmForm.get('price').invalid && (rmForm.get('price').dirty || rmForm.get('price').touched)\"\n                                class=\"input-group-text\" id=\"basic-addon1\">&#8377;</span>\n                            <input type=\"number\"\n                                [class.is-invalid]=\"rmForm.get('price').invalid && (rmForm.get('price').dirty || rmForm.get('price').touched)\"\n                                nbInput fullWidth class=\"form-control\" formControlName=\"price\" id=\"price\"\n                                placeholder=\"eg. 120\">\n                        </nb-form-field>\n\n                    </div>\n\n\n                    <!-- ERROR -->\n                    <div *ngIf=\"rmForm.get('price').invalid && (rmForm.get('price').dirty || rmForm.get('price').touched)\"\n                        class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"rmForm.get('price').errors?.required\"> <small>Please enter a price</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n\n        <!-- BOUGHT OUT -->\n        <form [formGroup]=\"boForm\" *ngIf=\"option == 'Bought Out'\">\n            <!-- NAME -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\"\n                            [class.is-invalid]=\"boForm.get('name').invalid && (boForm.get('name').dirty || boForm.get('name').touched)\"\n                            nbInput fullWidth formControlName=\"name\" id=\"name\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"boForm.get('name').invalid && (boForm.get('name').dirty || boForm.get('name').touched)\"\n                        class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"boForm.get('name').errors?.required\"> <small>Please enter name of the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"boForm.get('name').errors?.minlength\"> <small>Material Name should contain\n                                        atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- PART NUMBER -->\n            <div class=\"form-group\">\n                <label for=\"partNumber\" class=\"label\">Part Number</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\"\n                            [class.is-invalid]=\"partNumber.invalid && (partNumber.dirty || partNumber.touched)\" nbInput\n                            fullWidth formControlName=\"partNumber\" id=\"partNumber\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"partNumber.invalid && (partNumber.dirty || partNumber.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"partNumber.errors?.required\"> <small>Please enter part Number of the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"partNumber.errors?.minlength\"> <small>Material part Number should contain\n                                        atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- DESCRIPTION -->\n            <div class=\"form-group\">\n                <label for=\"description\" class=\"label\">Description <small>(optional)</small></label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\"\n                            [class.is-invalid]=\"boForm.get('description').invalid && (boForm.get('description').dirty || boForm.get('description').touched)\"\n                            nbInput fullWidth formControlName=\"description\" id=\"description\"\n                            placeholder=\"eg. 35% Long Fiber glass filled\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"boForm.get('description').invalid && (boForm.get('description').dirty || boForm.get('description').touched)\"\n                        class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"boForm.get('description').errors?.required\"> <small>Please enter name of the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"boForm.get('description').errors?.minlength\"> <small>Material Name should\n                                        contain\n                                        atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- VENDOR -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Vendor</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\"\n                        [class.is-invalid]=\"boForm.get('vendor').invalid && (boForm.get('vendor').dirty || boForm.get('vendor').touched)\"\n                            #autoInput nbInput (input)=\"onChange()\" fullWidth [nbAutocomplete]=\"auto\" autocomplete=\"off\"\n                            formControlName=\"vendor\" id=\"vendor\" placeholder=\"eg. Reliance Industries\" />\n                        <nb-autocomplete #auto (selectedChange)=\"onSelectionChange($event)\">\n                            <nb-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option.name\">\n                                {{ option.name }}\n                            </nb-option>\n\n                        </nb-autocomplete>\n\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"boForm.get('vendor').invalid && (boForm.get('vendor').dirty || boForm.get('vendor').touched)\"\n                        class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"boForm.get('vendor').errors?.required\"> <small>Please enter vendor of the\n                                        Material</small>\n                                </li>\n                                <li *ngIf=\"boForm.get('vendor').errors?.minlength\"> <small>Vendor should contain\n                                        atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- PRICE -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Price</label>\n                <div class=\"row\">\n                    <div class=\"col-md-2 col-5\">\n                        <nb-form-field>\n                            <span nbPrefix\n                                [class.is-invalid]=\"boForm.get('price').invalid && (boForm.get('price').dirty || boForm.get('price').touched)\"\n                                class=\"input-group-text\" id=\"basic-addon1\">&#8377;</span>\n                            <input type=\"number\"\n                                [class.is-invalid]=\"boForm.get('price').invalid && (boForm.get('price').dirty || boForm.get('price').touched)\"\n                                nbInput fullWidth class=\"form-control\" formControlName=\"price\" id=\"price\"\n                                placeholder=\"eg. 120\">\n                        </nb-form-field>\n\n                    </div>\n\n\n                    <!-- ERROR -->\n                    <div *ngIf=\"boForm.get('price').invalid && (boForm.get('price').dirty || boForm.get('price').touched)\"\n                        class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"boForm.get('price').errors?.required\"> <small>Please enter a price</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n\n        <!-- SUBMIT -->\n        <!-- <button nbButton status=\"primary\">Save</button> -->\n        <!-- </form> -->\n\n    </nb-card-body>\n</nb-card>\n<!-- FOOTER -->\n<ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer>","import { DatabaseService } from './../../services/database/database.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-material-list',\n  templateUrl: './material-list.component.html',\n  styleUrls: ['./material-list.component.scss']\n})\nexport class MaterialListComponent implements OnInit {\n  sort: any = '1';\n  data: any = [];\n\n  constructor(private db: DatabaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.db.getMaterials().subscribe((data) => {\n      this.data = data;\n    });\n\n  }\n\n  onItemSelected(item) {\n    this.router.navigate([`/materials/${item.id}`]);\n    // this.router.navigate([`/materials/${product.id}`]);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <button nbButton size=\"small\" routerLink='/materials/new' status=\"primary\">New Materials</button>\n    </div>\n    <!-- <div class=\"col-2\"> -->\n    <!-- <nb-select size=\"small\" style=\"margin-left:auto\" [(selected)]='sort' status=\"basic\">\n        <nb-option value=\"1\">name</nb-option>\n        <nb-option value=\"2\">Option 2</nb-option>\n        <nb-option value=\"3\">Option 3</nb-option>\n        <nb-option value=\"4\">Option 4</nb-option>\n    </nb-select> -->\n    <!-- </div> -->\n\n    <nb-actions class=\"col-6\">\n        <nb-action icon=\"search-outline\"></nb-action>\n        <nb-action icon=\"power-outline\"> Views</nb-action>\n        <nb-action icon=\"person-outline\"></nb-action>\n        <nb-action icon=\"home-outline\"></nb-action>\n    </nb-actions>\n</div>\n\n<ui-list-view [list]=\"data\" (onclick)=\"onItemSelected($event)\"></ui-list-view>","import { ToastService } from './../../ui/toast.service';\nimport { DatabaseService } from './../../services/database/database.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-mould-edit',\n  templateUrl: './mould-edit.component.html',\n  styleUrls: ['./mould-edit.component.scss']\n})\nexport class MouldEditComponent implements OnInit {\n  // GETTERS AND SETTERS\n  get name() {\n    return this.form.get('name');\n  }\n  get code() {\n    return this.form.get('code');\n  }\n  get phone() {\n    return this.form.get('phone');\n  }\n  get email() {\n    return this.form.get('email');\n  }\n  get cycleTime() {\n    return this.form.get('cycleTime');\n  }\n\n  get typeOfMould() {\n    return this.form.get('typeOfMould');\n  }\n  get material() {\n    return this.form.get('material');\n  }\n\n  get childpart() {\n    return this.form.get('childpart') as FormArray;\n  }\n  // DECLARATIONS\n  private selectedId: string;\n  selectedObject: any;\n  form: FormGroup;\n  validity = true;\n  shotWt: number;\n  option: any = 'FG';\n\n\n\n  constructor(\n    private fb: FormBuilder,\n    private db: DatabaseService,\n    private toast: ToastService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.selectedId = params.get('id');\n      this.fetchObject();\n    });\n    this.form = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      code: ['', [Validators.required, Validators.minLength(3)]],\n      cycleTime: [''],\n      inventoryType: [this.option],\n      material: [''],\n      typeOfMould: ['mould'],\n      dimensions: this.fb.group({\n        length: [''],\n        width: [''],\n        height: ['']\n      }),\n      childpart: this.fb.array([])\n    });\n\n    this.form.valueChanges.subscribe((data) => {\n      this.validity = this.form.valid;\n    });\n  }\n\n\n  fetchObject() {\n    if (this.selectedId) {\n      this.selectedObject = this.db.getMould(this.selectedId);\n      this.selectedObject.subscribe((data: any) => {\n        this.form.setValue({\n          name: data.name,\n          code: data.code,\n          cycleTime: data.cycleTime,\n          typeOfMould: data.typeOfMould,\n          dimensions: data.dimensions\n        });\n        if (data.typeOfMould === 'mould') {\n          this.shotWt = data.shotWt;\n        }\n      });\n    }\n  }\n\n  addChildpart() {\n    const cp = this.fb.group({\n      partName: [],\n      partNumber: [],\n      quantity: []\n    });\n    this.childpart.push(cp);\n  }\n\n  deleteChildpart(i) {\n    this.childpart.removeAt(i);\n  }\n  // ONSUBMIT\n  onButtonClicked(clickedButton) {\n    if (clickedButton === 'save') {\n\n      let data;\n      data = this.form.value;\n      if (this.form.value.typeOfMould === 'mould') {\n        data.shotWt = this.shotWt;\n      }\n      this.db.addMould(data, this.selectedId)\n        .then(() => {\n          this.toast.success('Mould updated succesfully');\n          this.form.reset();\n          this.shotWt = null;\n          if (this.selectedId) {\n            this.location.back();\n          }\n        });\n      // this.toast.success();\n      // if (this.option === 'Bought Out') {\n      //   this.db.addMaterial(this.boForm.value)\n      //     .then(() => {\n      //       this.toast.success('Material updated succesfully');\n      //       this.boForm.reset();\n      //       this.rmForm.reset();\n      //     });\n      // } else {\n      //   this.rmForm.value.name = this.rmName;\n      //   this.db.addMaterial(this.rmForm.value)\n      //     .then(() => {\n      //       this.toast.success('Material updated succesfully');\n      //       this.boForm.reset();\n      //       this.rmForm.reset();\n      //     });\n      // }\n    }\n  }\n}\n","<nb-card>\n    <nb-card-header>Mould Details</nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <label for=\"code\" class=\"label\">Code</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"code.invalid && (code.dirty || code.touched)\" nbInput\n                            fullWidth formControlName=\"code\" id=\"code\" placeholder=\"eg. MAT-M-233\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"name.invalid && (code.dirty || code.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"code.errors?.required\"> <small>Please enter code of the\n                                        Mould</small>\n                                </li>\n                                <li *ngIf=\"code.errors?.minlength\"> <small>Mould Code should contain atleast\n                                        3 characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput\n                            fullWidth formControlName=\"name\" id=\"name\" placeholder=\"eg. GB LHD\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter name of the\n                                        Vendor</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Mould Name should contain atleast\n                                        3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n\n    </nb-card-body>\n</nb-card>\n\n\n<nb-card>\n    <nb-accordion>\n        <nb-accordion-item expanded>\n            <!-- INPUT DETAILS -->\n            <nb-accordion-item-header>Input Details</nb-accordion-item-header>\n            <nb-accordion-item-body>\n                <div [formGroup]=\"form\">\n                    <!-- MATERIAL -->\n                    <div *ngIf=\"option == 'FG'\" class=\"form-group\">\n                        <label for=\"Material\" class=\"label\">Material</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <input type=\"text\"\n                                    [class.is-invalid]=\"material.invalid && (material.dirty || material.touched)\"\n                                    nbInput fullWidth formControlName=\"material\" id=\"material\" placeholder=\"eg. PPCP\">\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"material.invalid && (material.dirty || material.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"material.errors?.required\"> <small>Please enter a material.</small>\n                                        </li>\n                                        <li *ngIf=\"material.errors?.minlength\"> <small>material should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- NEXT OPERATION -->\n                    <div *ngIf=\"option == 'WIP'\" class=\"form-group\">\n                        <!-- <label for=\"nextOperation\" class=\"label\">Next Operation</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <input type=\"text\"\n                                    [class.is-invalid]=\"nextOperation.invalid && (nextOperation.dirty || nextOperation.touched)\"\n                                    nbInput fullWidth formControlName=\"nextOperation\" id=\"nextOperation\"\n                                    placeholder=\"eg. Trimming\">\n                            </div> -->\n                            <!-- ERROR -->\n                            <!-- <div *ngIf=\"nextOperation.invalid && (nextOperation.dirty || nextOperation.touched)\"\n                                class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"nextOperation.errors?.required\"> <small>Please enter next\n                                                Operation.</small>\n                                        </li>\n                                        <li *ngIf=\"nextOperation.errors?.minlength\"> <small>next Operation should\n                                                contain\n                                                atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div> -->\n                        <!-- </div> -->\n                    </div>\n                    <!-- CHILD PARTS -->\n                    <div class=\"form-group\" formGroupName=\"material\">\n                        <label for=\"name\" class=\"label\">Child parts</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"row\">\n                                    <!-- PART NAME -->\n                                    <div class=\"col-md-6\">\n                                        <div >\n                                            <label for=\"name\" class=\"label\"><small>part name</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\" \n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\" placeholder=\"Nut insert\">\n\n                                        </nb-form-field>\n                                    </div>\n\n                                    <!-- QUANTITY -->\n                                    <div class=\"col-2\">\n                                        <div style=\"text-align: center;\">\n                                            <label for=\"name\" class=\"label\"><small>quantity</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\"\n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\" placeholder=\"4\">\n\n                                        </nb-form-field>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                        </li>\n                                        <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button class=\"secondary\">\n                        <span>+ Add Child Part</span>\n                    </button>\n                </div>\n\n            </nb-accordion-item-body>\n        </nb-accordion-item>\n    </nb-accordion>\n</nb-card>\n<nb-card>\n    <nb-accordion>\n        <nb-accordion-item>\n            <nb-accordion-item-header>Operational Details</nb-accordion-item-header>\n            <nb-accordion-item-body>\n                <form [formGroup]=\"form\">\n\n                    <!-- TYPE OF MOLD -->\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"typeOfMould\" class=\"label\">Mould/Fixture</label>\n                        <div class=\"row radio-section\">\n\n                            <div class=\"col radio-option\">\n                                <label>\n                                    <input type=\"radio\" id=\"mould\" formControlName=\"typeOfMould\" value=\"mould\">\n                                    <div class=\"card radio-card\" for=\"control_01\">\n                                        <img class=\"\" src=\"/assets/app/moulding.svg\" alt=\"Card image cap\">\n                                        <div class=\"card-body\">\n                                            <p class=\"card-title text-center label\">Mould</p>\n                                        </div>\n                                    </div>\n                                </label>\n                            </div>\n                            <div class=\"col radio-option\">\n                                <label>\n                                    <input type=\"radio\" id=\"fixture\" formControlName=\"typeOfMould\" value=\"fixture\"\n                                        checked>\n                                    <div class=\"card radio-card\" for=\"control_02\">\n                                        <img class=\"card-img-top\" src=\"/assets/app/welding.svg\" alt=\"Card image cap\">\n                                        <div class=\"card-body\">\n                                            <p class=\"card-title text-center label\">Fixture</p>\n                                        </div>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- MOLD DIMENSIONS -->\n                    <div class=\"form-group\" formGroupName=\"dimensions\">\n                        <label for=\"name\" class=\"label\">Dimensions</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"row\">\n                                    <!-- LENGTH -->\n                                    <div class=\"col-4\">\n                                        <div style=\"text-align: center;\">\n                                            <label for=\"name\" class=\"label\"><small>length</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\" formControlName=\"length\"\n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\">\n                                            <span nbSuffix>cm</span>\n                                        </nb-form-field>\n                                    </div>\n                                    <div class=\"label\">\n                                        <span style=\"position: absolute; top: 50%;\">X</span>\n                                    </div>\n                                    <!-- WIDTH -->\n                                    <div class=\"col-4\">\n                                        <div style=\"text-align: center;\">\n                                            <label for=\"name\" class=\"label\"><small>width</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\" formControlName=\"width\"\n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\">\n                                            <span nbSuffix>cm</span>\n                                        </nb-form-field>\n                                    </div>\n                                    <div class=\"label\">\n                                        <span style=\"position: absolute; top: 50%;\">X</span>\n                                    </div>\n                                    <!-- HEIGHT -->\n                                    <div class=\"col-4\">\n                                        <div style=\"text-align: center;\">\n                                            <label for=\"name\" class=\"label\"><small>height</small></label>\n                                        </div>\n                                        <nb-form-field>\n                                            <input type=\"number\" formControlName=\"height\"\n                                                [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\"\n                                                nbInput fullWidth id=\"make\">\n                                            <span nbSuffix>cm</span>\n                                        </nb-form-field>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                        </li>\n                                        <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- CYCLE TIME -->\n                    <div class=\"form-group\">\n                        <label for=\"cycleTime\" class=\"label\">Cycle time</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-2 col-5\">\n                                <nb-form-field>\n\n                                    <input type=\"number\"\n                                        [class.is-invalid]=\"cycleTime.invalid && (cycleTime.dirty || cycleTime.touched)\"\n                                        nbInput fullWidth class=\"form-control\" formControlName=\"cycleTime\"\n                                        id=\"cycleTime\">\n                                    <span nbSuffix\n                                        [class.is-invalid]=\"cycleTime.invalid && (cycleTime.dirty || cycleTime.touched)\"\n                                        class=\"input-group-text\" id=\"basic-addon1\">s</span>\n                                </nb-form-field>\n\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"cycleTime.invalid && (cycleTime.dirty || cycleTime.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"cycleTime.errors?.required\"> <small>Please enter a cycle Time</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- SHOT WEIGHT -->\n                    <div class=\"form-group\" *ngIf=\"form.value.typeOfMould === 'mould'\">\n                        <label for=\"cycleTime\" class=\"label\">Shot weight</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-2 col-5\">\n                                <nb-form-field>\n\n                                    <input type=\"number\"\n                                        [class.is-invalid]=\"cycleTime.invalid && (cycleTime.dirty || cycleTime.touched)\"\n                                        nbInput fullWidth class=\"form-control\" [(ngModel)]=\"shotWt\"\n                                        [ngModelOptions]=\"{standalone: true}\" id=\"cycleTime\">\n                                    <span nbSuffix\n                                        [class.is-invalid]=\"cycleTime.invalid && (cycleTime.dirty || cycleTime.touched)\"\n                                        class=\"input-group-text\" id=\"basic-addon1\">g</span>\n                                </nb-form-field>\n\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"cycleTime.invalid && (cycleTime.dirty || cycleTime.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"cycleTime.errors?.required\"> <small>Please enter a cycle Time</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </nb-accordion-item-body>\n        </nb-accordion-item>\n        <nb-accordion-item>\n            <nb-accordion-item-header>Maintainence Details</nb-accordion-item-header>\n            <nb-accordion-item-body>\n                Item Content\n            </nb-accordion-item-body>\n        </nb-accordion-item>\n    </nb-accordion>\n</nb-card>\n\n<!-- FOOTER -->\n<ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from './../../services/database/database.service';\n\n\n@Component({\n  selector: 'app-mould-list',\n  templateUrl: './mould-list.component.html',\n  styleUrls: ['./mould-list.component.scss']\n})\nexport class MouldListComponent implements OnInit {\n  sort: any = '1';\n  data: any = [];\n\n  constructor(private db: DatabaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.db.getMoulds().subscribe((data) => {\n      this.data = data;\n    });\n\n  }\n\n  onItemSelected(item) {\n    console.log(item.id);\n    this.router.navigate([`/moulds/${item.id}`]);\n    // this.router.navigate([`/materials/${product.id}`]);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <button nbButton size=\"small\" routerLink='/moulds/new' status=\"primary\">New Moulds</button>\n    </div>\n    <!-- <div class=\"col-2\"> -->\n    <!-- <nb-select size=\"small\" style=\"margin-left:auto\" [(selected)]='sort' status=\"basic\">\n        <nb-option value=\"1\">name</nb-option>\n        <nb-option value=\"2\">Option 2</nb-option>\n        <nb-option value=\"3\">Option 3</nb-option>\n        <nb-option value=\"4\">Option 4</nb-option>\n    </nb-select> -->\n    <!-- </div> -->\n\n    <nb-actions class=\"col-6\">\n        <nb-action icon=\"search-outline\"></nb-action>\n        <nb-action icon=\"power-outline\"> Views</nb-action>\n        <nb-action icon=\"person-outline\"></nb-action>\n        <nb-action icon=\"home-outline\"></nb-action>\n    </nb-actions>\n</div>\n\n<ui-list-view [list]=\"data\" (onclick)=\"onItemSelected($event)\"></ui-list-view>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"menu\">\n    <!-- <a>Profile</a> -->\n    <a routerLink=\"/parts\" routerLinkActive=\"active\">Part</a>\n    <a>Materials</a>\n    <a>Machine</a>\n    <a>Mould / Fixture</a>\n    <a>Employees</a>\n    <a routerLink=\"/customers\">Customers</a>\n    <a routerLink=\"/vendors\">Vendors</a>\n    <a>Workflows</a>","import { ToastService } from './../../ui/toast.service';\nimport { DatabaseService } from './../../services/database/database.service';\nimport { Component, OnInit, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\n\n\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-part-edit',\n  templateUrl: './part-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./part-edit.component.scss']\n})\nexport class PartEditComponent implements OnInit {\n  data: any;\n\n\n  get name() {\n    return this.form.get('name');\n  }\n  get description() {\n    return this.form.get('description');\n  }\n  get code() {\n    return this.form.get('code');\n  }\n  get partWeight() {\n    return this.form.get('partWeight');\n  }\n  get shotWeight() {\n    return this.form.get('shotWeight');\n  }\n  get cycleTime() {\n    return this.form.get('cycleTime');\n  }\n  get cavity() {\n    return this.form.get('cavity');\n  }\n  get number() {\n    return this.form.get('number');\n  }\n  get inventoryType() {\n    return this.form.get('inventoryType');\n  }\n  get customer() {\n    return this.form.get('customer');\n  }\n  get nextOperation() {\n    return this.form.get('nextOperation');\n  }\n  get price() {\n    return this.form.get('price');\n  }\n  get material() {\n    return this.form.get('material');\n  }\n  get rm_name() {\n    return this.form.get('rm_name');\n  }\n  get tax_slab() {\n    return this.form.get('tax_slab');\n  }\n\n  private selectedId: string;\n  selectedObject: any;\n  option: any = 'FG';\n  form: FormGroup;\n  validity = true;\n  options: string[] = [];\n  filteredOptions$: Observable<any[]>;\n  partsFiltered$: Observable<any[]>;\n  customersFiltered$: Observable<any[]>;\n\n  @ViewChild('autoInput') input;\n  constructor(\n    private fb: FormBuilder,\n    private db: DatabaseService,\n    private toast: ToastService,\n    private route: ActivatedRoute,\n    private location: Location,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.selectedId = params.get('id');\n      this.fetchObject();\n      // this.loadCustomersList();\n    });\n    this.loadRMlist();\n    this.loadPartsList();\n\n    this.form = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      description: [''],\n      code: [''],\n      partWeight: [],\n      shotWeight: [],\n      cycleTime: [],\n      cavity: [],\n      inventoryType: [this.option],\n      customer: [''],\n      nextOperation: [''],\n      price: [],\n      rm_name: [],\n      tax_slab: [],\n\n\n    });\n\n    this.form.valueChanges.subscribe(() => {\n      this.validity = this.form.valid;\n      \n    });\n  }\n  private loadPartsList() {\n    this.db.getParts()\n    .subscribe((list: any)=>{\n      this.filteredOptions$=of(list);\n    this.options=list ;\n     })\n    }\n  private loadRMlist() {\n    this.db.getMaterials()\n      .subscribe((list: any) => {\n        this.filteredOptions$ = of(list);\n        this.options = list;\n      })\n\n  }\n\n\n  // private loadCustomersList() {\n  //   this.db.getCustomers()\n  //     .subscribe((list: any) => {\n  //       this.customersFiltered$ = of(list);\n  //     })\n  // }\n\n  private filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter((optionValue: any) => optionValue.name.toLowerCase().includes(filterValue));\n  }\n\n  getFilteredOptions(value: string): Observable<string[]> {\n    of(value).pipe(\n      map(filterString => this.filter(filterString)),\n    ).subscribe((data) => console.log(data))\n    console.log(value)\n    return of(value).pipe(\n      map(filterString => this.filter(filterString)),\n    );\n  }\n\n  onChange() {\n    this.form.controls['customer'].setValue('');\n    this.form.controls['nextOperation'].setValue('');\n  }\n\n  onDataChange() {\n    console.log(this.input.nativeElement.value)\n    this.filteredOptions$.subscribe((data) => {\n      console.log(data)\n    })\n\n    this.filteredOptions$ = this.getFilteredOptions(this.input.nativeElement.value);\n  }\n\n  onSelectionChange($event) {\n    this.filteredOptions$ = this.getFilteredOptions($event);\n  }\n\n\n  fetchObject() {\n    if (this.selectedId) {\n      console.log(this.selectedId)\n      this.selectedObject = this.db.getPart(this.selectedId);\n      this.selectedObject.subscribe((data: any) => {\n        this.form.patchValue({\n          name: data.name,\n          description: data.description,\n          code: data.code,\n          partWeight: data.partWeight,\n          shotWeight: data.shotWeight,\n          cycleTime: data.cycleTime,\n          cavity: data.cavity,\n          inventoryType: data.inventoryType,\n          customer: data.customer,\n          nextOperation: data.nextOperation,\n          price: data.price,\n          rm_name: data.rm_name,\n          tax_slab: data.tax_slab,\n         \n        });\n      });\n    }\n  }\n\n  // ONSUBMIT\n  onButtonClicked(clickedButton) {\n    if (clickedButton === 'save') {\n      this.db.addPart(this.form.value, this.selectedId)\n        .then(() => {\n          this.toast.success('Part updated succesfully');\n          this.form.reset();\n          if (this.selectedId) {\n            this.location.back();\n          }\n        });\n    }\n  }\n}\n","<nb-card>\n    <nb-card-header>Part Details</nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"form\">\n            <!-- PART NAME -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Part Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput\n                            fullWidth formControlName=\"name\" id=\"name\" placeholder=\"eg. GB LHD Reservoir\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter a name.</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- PRODUCT NUMBER -->\n            <div class=\"form-group\">\n                <label for=\"code\" class=\"label\">Part Number</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"code.invalid && (code.dirty || code.touched)\" nbInput\n                            fullWidth formControlName=\"code\" id=\"code\" placeholder=\"eg. 79001\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"code.invalid && (code.dirty || code.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"code.errors?.required\"> <small>Please enter a code.</small>\n                                </li>\n                                <li *ngIf=\"code.errors?.minlength\"> <small>code should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- DESCRIPTION -->\n            <div class=\"form-group\">\n                <label for=\"description\" class=\"label\">Description <small>(optional)</small></label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\"\n                            [class.is-invalid]=\"description.invalid && (description.dirty || description.touched)\"\n                            nbInput fullWidth formControlName=\"description\" id=\"description\"\n                            placeholder=\"eg. Project GB\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"description.errors?.required\"> <small>Please enter a description.</small>\n                                </li>\n                                <li *ngIf=\"description.errors?.minlength\"> <small>description should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- RAW MATERIAL NAME -->\n            <div class=\"form-group\">\n                <label for=\"rm_name\" class=\"label\">Raw Material</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" #autoInput autocomplete=\"off\"\n                            [class.is-invalid]=\"description.invalid && (description.dirty || description.touched)\"\n                            nbInput fullWidth formControlName=\"rm_name\" id=\"rm_name\" (input)=\"onDataChange()\"\n                            placeholder=\"eg. PPCP MI3530\" [nbAutocomplete]=\"auto\">\n                        <nb-autocomplete #auto (selectedChange)=\"onSelectionChange($event)\">\n\n                            <nb-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option.name\">\n                                {{ option.name }}\n                            </nb-option>\n\n                        </nb-autocomplete>\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"description.errors?.required\"> <small>Please enter a description.</small>\n                                </li>\n                                <li *ngIf=\"description.errors?.minlength\"> <small>description should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- PART WEIGHT -->\n            <div class=\"form-group\">\n                <label for=\"partWeight\" class=\"label\">Part Weight</label>\n                <div class=\"row\">\n                    <div class=\"col-md-3 col-5\">\n                        <nb-form-field>\n\n                            <input type=\"number\"\n                                [class.is-invalid]=\"partWeight.invalid && (partWeight.dirty || partWeight.touched)\"\n                                nbInput fullWidth class=\"form-control\" formControlName=\"partWeight\" id=\"partWeight\"\n                                placeholder=\"eg. 92.50\">\n                            <span nbSuffix\n                                [class.is-invalid]=\"partWeight.invalid && (partWeight.dirty || partWeight.touched)\"\n                                class=\"input-group-text\" id=\"basic-addon1\">g</span>\n                        </nb-form-field>\n\n                    </div>\n\n                    <!-- ERROR -->\n                    <div *ngIf=\"partWeight.invalid && (partWeight.dirty || partWeight.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"partWeight.errors?.required\"> <small>Please enter a weight</small></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- SHOT WEIGHT -->\n            <div class=\"form-group\">\n                <label for=\"weight\" class=\"label\">Shot Weight</label>\n                <div class=\"row\">\n                    <div class=\"col-md-3 col-5\">\n                        <nb-form-field>\n\n                            <input type=\"number\"\n                                [class.is-invalid]=\"shotWeight.invalid && (shotWeight.dirty || shotWeight.touched)\"\n                                nbInput fullWidth class=\"form-control\" formControlName=\"shotWeight\" id=\"shotWeight\"\n                                placeholder=\"eg. 92.50\">\n                            <span nbSuffix\n                                [class.is-invalid]=\"shotWeight.invalid && (shotWeight.dirty || shotWeight.touched)\"\n                                class=\"input-group-text\" id=\"basic-addon1\">g</span>\n                        </nb-form-field>\n                    </div>\n\n\n                    <!-- ERROR -->\n                    <div *ngIf=\"shotWeight.invalid && (shotWeight.dirty || shotWeight.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"shotWeight.errors?.required\"> <small>Please enter a weight</small></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- CYCLE TIME -->\n            <div class=\"form-group\">\n                <label for=\"cycleTime\" class=\"label\">Cycle Time</label>\n                <div class=\"row\">\n                    <div class=\"col-md-2 col-5\">\n                        <nb-form-field>\n\n                            <input type=\"number\"\n                                [class.is-invalid]=\"cycleTime.invalid && (cycleTime.dirty || cycleTime.touched)\" nbInput\n                                fullWidth class=\"form-control\" formControlName=\"cycleTime\" id=\"cycleTime\"\n                                placeholder=\"eg. 120\">\n                            <span nbSuffix\n                                [class.is-invalid]=\"cycleTime.invalid && (cycleTime.dirty || cycleTime.touched)\"\n                                class=\"input-group-text\" id=\"basic-addon1\">s</span>\n                        </nb-form-field>\n\n                    </div>\n\n\n                    <!-- ERROR -->\n                    <div *ngIf=\"cycleTime.invalid && (cycleTime.dirty || cycleTime.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"cycleTime.errors?.required\"> <small>Please enter a price</small></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- CAVITY -->\n            <div class=\"form-group\">\n                <label for=\"cavity\" class=\"label\">Cavity</label>\n                <div class=\"row\">\n                    <div class=\"col-md-2 col-5\">\n                        <nb-form-field>\n\n                            <input type=\"number\" [class.is-invalid]=\"cavity.invalid && (cavity.dirty || cavity.touched)\"\n                                nbInput fullWidth class=\"form-control\" formControlName=\"cavity\" id=\"cavity\"\n                                placeholder=\"eg. 120\">\n\n                        </nb-form-field>\n\n                    </div>\n\n\n                    <!-- ERROR -->\n                    <div *ngIf=\"cavity.invalid && (cavity.dirty || cavity.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"cavity.errors?.required\"> <small>Please enter a price</small></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- TYPE OF INVENTORY -->\n            <div class=\"form-group col-md-6\">\n                <label for=\"inventoryType\" class=\"label\">Type of inventory</label>\n                <div class=\"row radio-section\">\n\n                    <div class=\"col radio-option\">\n                        <label>\n                            <input type=\"radio\" [(ngModel)]=\"option\" (change)=\"onChange()\" id=\"WIP\"\n                                formControlName=\"inventoryType\" value=\"WIP\">\n                            <div class=\"card radio-card\" for=\"control_01\">\n                                <img class=\"\" src=\"/assets/app/wip.svg\" alt=\"Card image cap\">\n                                <div class=\"card-body\">\n                                    <p class=\"card-title text-center label\">WIP</p>\n                                </div>\n                            </div>\n                        </label>\n                    </div>\n                    <div class=\"col radio-option\">\n                        <label>\n                            <input type=\"radio\" [(ngModel)]=\"option\" (change)=\"onChange()\" id=\"FG\"\n                                formControlName=\"inventoryType\" value=\"FG\" checked>\n                            <div class=\"card radio-card\" for=\"control_02\">\n                                <img class=\"card-img-top\" src=\"/assets/app/fg.svg\" alt=\"Card image cap\">\n                                <div class=\"card-body\">\n                                    <p class=\"card-title text-center label\">FG</p>\n                                </div>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </div>\n\n        </form>\n    </nb-card-body>\n</nb-card>\n\n<!-- SOURCING DETAILS -->\n<nb-card>\n    <nb-accordion>\n        <nb-accordion-item expanded>\n            <!-- SOURCING DETAIL -->\n            <nb-accordion-item-header>Sourcing Details</nb-accordion-item-header>\n            <nb-accordion-item-body>\n                <div [formGroup]=\"form\">\n                    <!-- CUSTOMER -->\n                    <div *ngIf=\"option == 'FG'\" class=\"form-group\">\n                        <label for=\"customer\" class=\"label\">Customer</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <input type=\"text\" #autoInput\n                                    [class.is-invalid]=\"description.invalid && (description.dirty || description.touched)\"\n                                    nbInput fullWidth formControlName=\"rm_name\" id=\"rm_name\" (input)=\"onDataChange()\"\n                                    placeholder=\"eg-Mando\" [nbAutocomplete]=\"auto\">\n                                <nb-autocomplete #auto (selectedChange)=\"onSelectionChange($event)\">\n\n                                    <nb-option *ngFor=\"let option of customersFiltered$ | async\" [value]=\"option.name\">\n                                        {{ option.name }}\n                                    </nb-option>\n\n                                </nb-autocomplete>\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"customer.invalid && (customer.dirty || customer.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"customer.errors?.required\"> <small>Please enter a customer.</small>\n                                        </li>\n                                        <li *ngIf=\"customer.errors?.minlength\"> <small>customer should contain atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- NEXT OPERATION -->\n                    <div *ngIf=\"option == 'WIP'\" class=\"form-group\">\n                        <label for=\"nextOperation\" class=\"label\">Next Operation</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <input type=\"text\"\n                                    [class.is-invalid]=\"nextOperation.invalid && (nextOperation.dirty || nextOperation.touched)\"\n                                    nbInput fullWidth formControlName=\"nextOperation\" id=\"nextOperation\"\n                                    placeholder=\"eg. Trimming\">\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"nextOperation.invalid && (nextOperation.dirty || nextOperation.touched)\"\n                                class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"nextOperation.errors?.required\"> <small>Please enter next\n                                                Operation.</small>\n                                        </li>\n                                        <li *ngIf=\"nextOperation.errors?.minlength\"> <small>next Operation should\n                                                contain\n                                                atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- PRICE -->\n                    <div class=\"form-group\">\n                        <label for=\"price\" class=\"label\">Price</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-2 col-5\">\n                                <nb-form-field>\n                                    <span nbPrefix [class.is-invalid]=\"price.invalid && (price.dirty || price.touched)\"\n                                        class=\"input-group-text\" id=\"basic-addon1\">&#8377;</span>\n                                    <input type=\"number\"\n                                        [class.is-invalid]=\"price.invalid && (price.dirty || price.touched)\" nbInput\n                                        fullWidth class=\"form-control\" formControlName=\"price\" id=\"price\"\n                                        placeholder=\"eg. 120\">\n                                </nb-form-field>\n\n                            </div>\n\n\n                            <!-- ERROR -->\n                            <div *ngIf=\"price.invalid && (price.dirty || price.touched)\" class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"price.errors?.required\"> <small>Please enter a price</small></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </nb-accordion-item-body>\n        </nb-accordion-item>\n    </nb-accordion>\n</nb-card>\n<!-- ENGINEERING DETAILS -->\n<nb-card>\n    <nb-accordion>\n        <nb-accordion-item>\n            <nb-accordion-item-header>Engineering details</nb-accordion-item-header>\n            <nb-accordion-item-body>\n                <div [formGroup]=\"form\">\n                    <!-- DRAWING NUMBER -->\n                    <div *ngIf=\"option == 'FG'\" class=\"form-group\">\n                        <label for=\"customer\" class=\"label\">Drawing Number</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <input type=\"text\"\n                                    [class.is-invalid]=\"customer.invalid && (customer.dirty || customer.touched)\"\n                                    nbInput fullWidth formControlName=\"customer\" id=\"customer\"\n                                    placeholder=\"eg. 101DA514\">\n                            </div>\n                            <!-- ERROR -->\n                            <!-- <div *ngIf=\"customer.invalid && (customer.dirty || customer.touched)\" class=\"col-md-6\">\n                            <div class=\"error\">\n                                <ul>\n                                    <li *ngIf=\"customer.errors?.required\"> <small>Please enter a customer.</small>\n                                    </li>\n                                    <li *ngIf=\"customer.errors?.minlength\"> <small>customer should contain atleast 3\n                                            characters.</small>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div> -->\n                        </div>\n                    </div>\n                    <!-- ISSUE NUMBER -->\n                    <div class=\"form-group\">\n                        <label for=\"nextOperation\" class=\"label\">Latest Issue Number</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <input type=\"text\"\n                                    [class.is-invalid]=\"nextOperation.invalid && (nextOperation.dirty || nextOperation.touched)\"\n                                    nbInput fullWidth formControlName=\"nextOperation\" id=\"nextOperation\"\n                                    placeholder=\"eg. 101DA514\">\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"nextOperation.invalid && (nextOperation.dirty || nextOperation.touched)\"\n                                class=\"col-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"nextOperation.errors?.required\"> <small>Please enter next\n                                                Operation.</small>\n                                        </li>\n                                        <li *ngIf=\"nextOperation.errors?.minlength\"> <small>next Operation should\n                                                contain\n                                                atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- ISSUE DATE -->\n                    <div class=\"form-group\">\n                        <label for=\"nextOperation\" class=\"label\">Latest Issue date</label>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <input nbInput placeholder=\"Pick Date\" [nbDatepicker]=\"dateTimePicker\">\n                                <nb-datepicker #dateTimePicker></nb-datepicker>\n                            </div>\n                            <!-- ERROR -->\n                            <div *ngIf=\"nextOperation.invalid && (nextOperation.dirty || nextOperation.touched)\"\n                                class=\"cola-md-6\">\n                                <div class=\"error\">\n                                    <ul>\n                                        <li *ngIf=\"nextOperation.errors?.required\"> <small>Please enter next\n                                                Operation.</small>\n                                        </li>\n                                        <li *ngIf=\"nextOperation.errors?.minlength\"> <small>next Operation should\n                                                contain\n                                                atleast 3\n                                                characters.</small>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            </nb-accordion-item-body>\n        </nb-accordion-item>\n    </nb-accordion>\n</nb-card>\n\n<!-- PART DETAILS -->\n<nb-card>\n    <nb-accordion>\n        <nb-accordion-item>\n            <nb-accordion-item-header>Part details</nb-accordion-item-header>\n            <nb-accordion-item-body>\n                <div class=\"form-group\" [formGroup]=\"form\">\n                    <label for=\"tax_slab\" class=\"label\">Select a Tax</label>\n                    <div class=\"row\">\n                        <div class=\"col-md-2 col-5\">\n                            <nb-select [class.is-invalid]=\"tax_slab.invalid && (tax_slab.dirty || tax_slab.touched)\"\n                                placeholder=\"eg. 0%\" formControlName=\"tax_slab\" id=\"tax_slab\">\n                                <nb-option disabled>Select a Tax</nb-option>\n                                <nb-option value=\"0\">0%</nb-option>\n                                <nb-option value=\"5\">5%</nb-option>\n                                <nb-option value=\"12\">12%</nb-option>\n                                <nb-option value=\"18\">18%</nb-option>\n                                <nb-option value=\"28\">28%</nb-option>\n                            </nb-select>\n                        </div>\n                    </div>\n                </div>\n\n            </nb-accordion-item-body>\n        </nb-accordion-item>\n    </nb-accordion>\n</nb-card>\n\n<!-- FOOTER -->\n<!-- (event)=\"onButtonClicked($event)\" [status]=\"validity\" -->\n<ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer>","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from 'src/app/services/database/database.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-part-list',\n  templateUrl: './part-list.component.html',\n  styleUrls: ['./part-list.component.scss']\n})\nexport class PartListComponent implements OnInit {\n  sort: any = '1';\n  data: any = [];\n  parts: any;\n  firestore: any;\n  selectedCustomer = '';\n  customers: unknown[];\n  constructor(private db: DatabaseService, private router: Router) {\n    this.db.getParts().subscribe((data) => {\n      this.data = data;\n    });\n  }\n\n  ngOnInit(): void {\n    this.db.getCustomers().subscribe((data) => {\n      this.customers = data;\n      this.selectedCustomer\n    });\n    \n  }\n\n  public onChange(){\n    this.parts = this.firestore.collection('parts',ref=>ref.where('customer','==',this.selectedCustomer)).valueChanges();\n  }\n  \n  onItemSelected(item) {\n    console.log(item.id);\n    this.router.navigate([`/parts/${item.id}`]);\n    // this.router.navigate([`/materials/${product.id}`]);\n  }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <button nbButton size=\"small\" routerLink='/parts/new' status=\"primary\">New Parts</button>\n    </div>\n    <nb-select class=\"col-4\" placeholder=\"Select Customer\" id=\"customer\" style=\"margin-right: 50px;\"\n        [(selected)]=\"selectedCustomer\">\n        <nb-option *ngFor=\"let customer of customers\" [value]=\"customer.name\" (click)=\"onChange()\">{{customer.name}}\n        </nb-option>\n    </nb-select>\n    <!-- <div class=\"col-2\"> -->\n    <!-- <nb-select size=\"small\" style=\"margin-left:auto\" [(selected)]='sort' status=\"basic\">\n        <nb-option value=\"1\">name</nb-option>\n        <nb-option value=\"2\">Option 2</nb-option>\n        <nb-option value=\"3\">Option 3</nb-option>\n        <nb-option value=\"4\">Option 4</nb-option>\n    </nb-select> -->\n    <!-- </div> -->\n\n    <nb-actions class=\"col-6\">\n        <nb-action icon=\"search-outline\"></nb-action>\n        <nb-action icon=\"power-outline\"> Views</nb-action>\n        <nb-action icon=\"person-outline\"></nb-action>\n        <nb-action icon=\"home-outline\"></nb-action>\n    </nb-actions>\n</div>\n\n\n\n<ui-list-view [list]=\"data\" (onclick)=\"onItemSelected($event)\"></ui-list-view>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DatabaseService } from 'src/app/services/database/database.service';\nimport { ToastService } from 'src/app/ui/toast.service';\nimport { Location } from '@angular/common';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { ScheduleComponent } from '../../schedule/schedule.component';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\n\n@Component({\n  selector: 'app-loading-edit',\n  templateUrl: './loading-edit.component.html',\n  styleUrls: ['./loading-edit.component.scss']\n})\nexport class LoadingEditComponent implements OnInit {\n\n  requiredForm: FormGroup;\n  customer: any;\n  selectedCustomer = '';\n  parts: Observable<any>;\n  validity = false;\n  private selectedId: string;\n  selectedObject: any;\n  autoValue: string;\n  firestore: any;\n\n\n  get partNo() {\n    return this.loadingForm.get('partNo');\n  }\n  get partName() {\n    return this.loadingForm.get('partName');\n  }\n  get date() {\n    return this.loadingForm.get('date');\n  }\n  get quantity() {\n    return this.loadingForm.get('quantity');\n  }\n  get invoiceNo() {\n    return this.loadingForm.get('invoiceNo');\n  }\n  get invoiceDate() {\n    return this.loadingForm.get('invoiceDate');\n  }\n  get invoiceValue() {\n    return this.loadingForm.get('invoiceValue');\n  }\n  get driver() {\n    return this.loadingForm.get('driver');\n  }\n  get company() {\n    return this.loadingForm.get('company');\n  }\n  get trip() {\n    return this.loadingForm.get('trip');\n  }\n  get grnNo() {\n    return this.loadingForm.get('grnNo');\n  }\n  sampleDate = new Date();\n  partOptions: string[] = [];\n  partsFiltered$: Observable<any[]>;\n  \n  @ViewChild('autoInput') input;\n  constructor(\n    private toast: ToastService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private db: DatabaseService,\n    private fb: FormBuilder,\n    \n  ) { }\n  private loadPartsList() {\n    this.db.getParts()\n      .subscribe((list: any) => {\n        this.partOptions = list;\n        this.partsFiltered$ = of(list);\n      })\n  }\n  //Delete\n  onDeleteClicked(clickedButton){\n    this.loadingForm.get(\"typeOfDocument\").setValue(\"loading\");\n    if (clickedButton === \"delete\"){\n      this.db.click(this.selectedId)\n      this.toast.success('Deleted Successfully');\n      this.location.back()\n    }\n  }\n  \n  onItemChange() {\n    this.partsFiltered$ = this.getFilteredOptions(this.input.nativeElement.value);\n  }\n  onSelectChange($event) {\n    this.partsFiltered$ = this.getFilteredOptions($event);\n  }\n\n  getFilteredOptions(value: string): Observable<string[]> {\n    return of(value).pipe(\n      map(filterString => this.filter(filterString)),\n    );\n  }\n  private filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.partOptions.filter(optionValue => optionValue.toLowerCase().includes(filterValue));\n  }\n\n\n  loadingForm: FormGroup;\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.selectedId = params.get('id');\n      this.fetchObject()\n      this.myForm();\n    });\n\n    this.loadingForm = this.fb.group({\n      date: [new Date()],\n      partNo: ['', [Validators.required, Validators.minLength(3)]],\n      partName: ['', [Validators.required]],\n      quantity: ['', [Validators.required]],\n      invoiceNo: ['', [Validators.required]],\n      invoiceDate: [new Date()],\n      invoiceValue: ['', [Validators.required]],\n      driver: ['', [Validators.required]],\n      company: ['', [Validators.required]],\n      trip: ['', [Validators.required]],\n      grnNo: [],\n      typeOfDocument: []\n    });\n    this.loadingForm.valueChanges.subscribe(() => {\n      this.validity = this.loadingForm.valid;\n    });\n  }\n  myForm() {\n    this.requiredForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n\n  fetchObject() {\n    if (this.selectedId) {\n      this.selectedObject = this.db.getLoadingSheet(this.selectedId);\n      this.selectedObject.subscribe((data: any) => {\n        console.log(data);\n        this.loadingForm.patchValue({\n          partNo: data.partNo,\n          partName: data.partName,\n          date: new Date(data.date.toMillis()),\n          quantity: data.quantity,\n          invoiceNo: data.invoiceNo,\n          invoiceDate: new Date(data.invoiceDate.toMillis()),\n          invoiceValue: data.invoiceValue,\n          driver: data.driver,\n          company: data.company,\n          trip: data.trip,\n          grnNo: data.grnNo,\n          typeOfDocument: data.typeOfDocument,\n        });\n      });\n    }\n  }\n  \n\n  // ONSUBMIT\n  onButtonClicked(clickedButton) {\n    this.loadingForm.get(\"typeOfDocument\").setValue(\"loading\");\n    if (clickedButton === 'save') {\n      this.db.addLoadingSheet(this.loadingForm.value, this.selectedId)\n        .then(() => {\n          this.toast.success('Dispatch updated succesfully');\n          if (this.selectedId) {\n            this.location.back();\n          }\n        });\n    }\n\n  }\n\n  onDate(event) {\n    console.log(event);\n    console.log(this.sampleDate);\n  }\n}\n\n","<nb-card>\n    <nb-card-header>Loading sheet</nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"loadingForm\" novalidate>\n            <!--DATE-->\n            <div class=\"form-group\">\n                <label for=\"date\" class=\"label\">Date</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input nbInput placeholder=\"Pick Date\" [nbDatepicker]=\"date\" formControlName=\"date\" id=\"date\">\n                        <nb-datepicker #date></nb-datepicker>\n                    </div>\n                </div>\n            </div>\n            <!-- PART NUMBER -->\n            <div class=\"form-group\">\n                <label for=\"partNumber\" class=\"label\">Part Number</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input formControlName=\"partNo\"\n                            [class.is-invalid]=\"partNo.invalid && (partNo.dirty || partNo.touched)\" type=\"text\"\n                            id=\"partNo\" fullWidth placeholder=\"\" nbInput>\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"partNo.invalid && (partNo.dirty || partNo.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"partNo.errors?.required\"> <small>Please enter PartNumber of the\n                                        Loading Sheet</small>\n                                </li>\n                                <li *ngIf=\"partNo.errors?.minlength\"> <small>Part Number should contain atleast\n                                        3 characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- PART NAME -->\n             <div class=\"form-group\">\n                <label for=\"partName\" class=\"label\">Part Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input  formControlName=\"partName\" type=\"text\" \n                            [class.is-invalid]=\"partName.invalid && (partName.dirty || partName.touched)\" id=\"partName\"\n                            fullWidth placeholder=\"\" nbInput>\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"partName.invalid && (partName.dirty || partName.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"partName.errors?.required\"> <small>Please enter PartName of the\n                                        Loading Sheet</small>\n                                </li>\n                                <li *ngIf=\"partName.errors?.minlength\"> <small>Part Name should contain atleast\n                                        5 characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div> \n\n            <!-- <input type=\"text\" style=\"margin-bottom: 20px; width: 80%; height: 40px;\" s #autoInput\n                [class.is-invalid]=\"description.invalid && (description.dirty || description.touched)\" nbInput fullWidth\n                formControlName=\"partName\" id=\"partName\" (input)=\"onDataChange()\" placeholder=\"eg-GB LHD\"\n                [nbAutocomplete]=\"auto\"> -->\n            <!-- <nb-autocomplete #auto (selectedChange)=\"onSelectChange($event)\">\n\n                <nb-option *ngFor=\"let option of partsFiltered$ | async\" [value]=\"option.name\" formControlName=\"partName\">\n                    {{ option.name }}/{{option.code}}\n                </nb-option>\n\n            </nb-autocomplete> -->\n            <!-- QUANTITY -->\n            <div class=\"form-group\">\n                <label for=\"quantity\" class=\"label\">Quantity</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input formControlName=\"quantity\" type=\"number\"\n                            [class.is-invalid]=\"quantity.invalid && (quantity.dirty || quantity.touched)\" id=\"quantity\"\n                            placeholder=\"\" nbInput>\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"quantity.invalid && (quantity.dirty || quantity.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"quantity.errors?.required\"> <small>Please enter Quantity of the\n                                        Loading Sheet</small>\n                                </li>\n                                <li *ngIf=\"quantity.errors?.minlength\"> <small>Quantity should contain atleast\n                                        1 characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- INVOICE NUMBER -->\n            <div class=\"form-group\">\n                <label for=\"invoiceNo\" class=\"label\">Invoice No</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input formControlName=\"invoiceNo\" type=\"text\" id=\"invoiceNo\" fullWidth placeholder=\"\" nbInput>\n                    </div>\n                </div>\n            </div>\n            <!-- INVOICE DATE -->\n            <div class=\"form-group\">\n                <label for=\"invoiceDate\" class=\"label\">Invoice Date</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input formControlName=\"invoiceDate\" [nbDatepicker]=\"invoiceDate\" id=\"invoiceDate\" fullWidth\n                            placeholder=\"\" nbInput>\n                        <nb-datepicker #invoiceDate></nb-datepicker>\n                    </div>\n                </div>\n            </div>\n            <!-- INVOICE VALUE -->\n            <div class=\"form-group\">\n                <label for=\"invoiceValue\" class=\"label\">Invoice Value</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input formControlName=\"invoiceValue\" type=\"text\" id=\"invoiceValue\" fullWidth placeholder=\"\"\n                            nbInput>\n                    </div>\n                </div>\n            </div>\n            <!-- DRIVER -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Driver</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input formControlName=\"driver\" type=\"text\" id=\"driver\" fullWidth placeholder=\"\" nbInput>\n                    </div>\n                </div>\n            </div>\n            <!-- COMPANY -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Company</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input formControlName=\"company\" type=\"text\" id=\"company\" fullWidth placeholder=\"\" nbInput>\n                    </div>\n                </div>\n            </div>\n            <!-- TRIP -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Trip</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n\n                        <nb-select formControlName=\"trip\" id=\"trip\"\n                            style=\"margin-bottom: 20px; width: 70%; height: 40px; background-color: rgb(5, 5, 5); color: rgb(245, 238, 238); border: rgb(5, 5, 5);\"\n                            placeholder=\"eg. 0%\">\n                            <nb-option disabled>Select a Trip</nb-option>\n                            <nb-option value=\"I Trip\">I Trip</nb-option>\n                            <nb-option value=\"II Trip\">II Trip</nb-option>\n                            <nb-option value=\"III Trip\">III Trip</nb-option>\n                            <nb-option value=\"IV Trip\">IV Trip</nb-option>\n                            <nb-option value=\"V Trip\">V Trip</nb-option>\n                        </nb-select>\n                    </div>\n                </div>\n            </div>\n            <!-- GRN NO -->\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">GRN No</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input formControlName=\"grnNo\" type=\"text\" id=\"grnNo\" placeholder=\"\" nbInput>\n                    </div>\n                </div>\n            </div>\n            <!--DELETE-->\n            <app-form-delete (event)=\"onDeleteClicked($event)\" [status]=\"validity\"></app-form-delete>\n        </form>\n    </nb-card-body>\n</nb-card>\n\n\n<ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from 'src/app/services/database/database.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-loading-list',\n  templateUrl: './loading-list.component.html',\n  styleUrls: ['./loading-list.component.scss']\n})\nexport class LoadingListComponent implements OnInit {\n  myFilter = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n    // Prevent Saturday and Sunday from being selected.\n    return day !== 0 && day !== 6;\n  }\n  sort: any = '1';\n  data: any = [];\n  customers: any = [];\n  selectedCustomer = '';\n  parts: Observable<any>;\n  validity = false;\n  afs: any;\n  item: any;\n\n  constructor(private db: DatabaseService, private router: Router,private firestore: AngularFirestore) { }\n  \n\n  ngOnInit(): void {\n    this.db.getLoadingSheetList().subscribe((data) => {\n      this.data = data;\n      console.log(data);\n      \n    });\n    this.db.getCustomers().subscribe((data) => {\n      this.customers = data;\n      this.selectedCustomer\n    });\n    \n\n  }\n  public onChange(){\n    this.parts = this.firestore.collection('parts',ref=>ref.where('customer','==',this.selectedCustomer)).valueChanges();\n  }\n  \n  \n  //PRINT FUNCTION\n  printComponent(cmpName) {\n    let printContents = document.getElementById(cmpName).innerHTML;\n    let originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    document.body.innerHTML = originalContents;\n}\n  onItemSelected(item){\n    console.log(item)\n    this.router.navigate([`/loading/${item.id}`]);\n  }   \n  \n  \n\n  onButtonClicked(clickedButton): void {\n    if (clickedButton === 'save') {\n      \n      } else {\n        \n\n}\n  }\n}\n","<!-- <div class=\"col-md-3\" style=\"padding-top: 15px;padding-bottom: 15px;\">\n    <button nbButton status=\"primary\" (click)=\"openPart()\">\n        <nb-icon icon=\"plus\"></nb-icon>Add Dispatch Record\n    </button>\n</div> -->\n\n<div  class=\"row\">\n    <div class=\"col-4\">\n        <button nbButton size=\"small\" routerLink='/loading/new' status=\"primary\">\n            <nb-icon icon=\"plus\"></nb-icon>Add Dispatch Record\n        </button>\n    </div>\n    <input nbInput placeholder=\"Pick Date\" [nbDatepicker]=\"date\" [ngModel]=\"date\" id=\"date\" >\n    <nb-datepicker #date></nb-datepicker>\n    <nb-select class=\"col-4\" placeholder=\"Select Customer\" id=\"customer\" style=\"margin-left: 20px;\"\n        [(selected)]=\"selectedCustomer\">\n        <nb-option *ngFor=\"let customer of customers\" [value]=\"customer.name\" (click)=\"onChange()\">{{customer.name}}\n        </nb-option>\n    </nb-select>\n\n    <!-- <div class=\"col-2\"> -->\n    <!-- <nb-select size=\"small\" style=\"margin-left:auto\" [(selected)]='sort' status=\"basic\">\n        <nb-option value=\"1\">name</nb-option>\n        <nb-option value=\"2\">Option 2</nb-option>\n        <nb-option value=\"3\">Option 3</nb-option>\n        <nb-option value=\"4\">Option 4</nb-option>\n    </nb-select> -->\n    <!-- </div> -->\n</div>\n\n<!-- <ui-list-view [list]=\"data\" (onclick)=\"onItemSelected($event)\"></ui-list-view> -->\n<nb-card>\n<div id=\"component1\">\n<table >\n    <tr >\n        <th class=\"col-2\">Date</th>\n        <th class=\"col-4\">Part Name / Part Number</th>\n        <th class=\"col-1\">Quantity</th>\n        <th class=\"col-2\">Invoice Number</th>\n        <th class=\"col-2\">Invoice Date</th>\n        <th class=\"col-2\">Invoice Value</th>\n        <th class=\"col-1\">GRN Status</th>\n       \n    </tr>\n    <tr style=\"cursor: pointer;\" *ngFor=\"let item of data\" (click)=\"onItemSelected(item)\">\n        <td *ngIf=\"item?.date\" class=\"col-2\">{{item.date.toMillis()|date:'dd/MM/yyyy'}}</td>\n        <td style=\"text-align: center;\" *ngIf=\"item?.partNo\" class=\"col-4\">{{item.partName}}/{{item.partNo}}</td>\n        <td style=\"text-align: center;\" *ngIf=\"item?.quantity\" class=\"col-1\">{{item.quantity}}</td>\n        <td style=\"text-align: center;\" *ngIf=\"item?.invoiceNo\" class=\"col-2\">{{item.invoiceNo}}</td>\n        <td style=\"text-align: center;\" *ngIf=\"item?.invoiceDate\" class=\"col-1\">\n            {{item.invoiceDate.toMillis()|date:'dd/MM/yyyy'}}</td>\n        <td style=\"text-align: center;\" *ngIf=\"item?.invoiceValue\" class=\"col-1\">{{item.invoiceValue}}</td>\n       \n\n           \n        <td style=\"text-align: center;\">\n            <svg *ngIf=\"item?.grnNo; else noGrn\" height=\"20\" width=\"20\">\n                <circle cx=\"10\" cy=\"10\" r=\"10\" stroke=\"grey\" stroke-width=\"1\" fill=\"green\" />\n            </svg>\n            <ng-template #noGrn><svg height=\"20\" width=\"20\">\n                    <circle cx=\"10\" cy=\"10\" r=\"10\" stroke=\"grey\" stroke-width=\"1\" fill=\"red\" />\n                </svg></ng-template>\n        </td>\n    </tr>\n</table>\n</div>\n\n\n    <div class=\"col-md-1\" >\n        <button ngxPrint nbButton size=\"small\"  status=\"primary\" (click)=\"printComponent('component1')\">\n            <nb-icon icon=\"printer-outline\"></nb-icon>Print\n        </button>\n    </div>\n</nb-card>","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from 'src/app/services/database/database.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, of, scheduled } from 'rxjs';\nimport { ToastService } from 'src/app/ui/toast.service';\nimport { Location } from '@angular/common';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss']\n})\nexport class ScheduleComponent implements OnInit {\n\n  load: any = [];\n  data: any = [];\n  customer: any;\n  selectedCustomer = '';\n  parts: Observable<any>;\n  quantity: Observable<any>;\n  validity = true;\n  selectedObject: any;\n  private selectedId: string;\n  month = null;\n  filteredOptions$: any;\n  options: any;\n\n\n\n  \n  // get schedule() {\n  //   return this.scheduleForm.get('schedule');\n  // }\n  // get dispatched() {\n  //   return this.scheduleForm.get('quantity');\n  // }\n  // get balance() {\n  //   return this.scheduleForm.get('balance');\n  // }\n  // get completed() {\n  //   return this.scheduleForm.get('completed');\n  // }\n  get partName() {\n    return this.scheduleForm.get('partName');\n  }\n  get items() {\n    return this.scheduleForm.get('items') as FormArray;\n    \n  }\n\n\n  constructor(\n    private db: DatabaseService,\n    private firestore: AngularFirestore,\n    private toast: ToastService,\n    private location: Location,\n    private fb: FormBuilder,\n    // private route: ActivatedRoute,\n  ) { }\n\n  scheduleForm: FormGroup;\n\n\n  ngOnInit(): void {\n\n    this.db.getLoadingSheetList().subscribe ((load) => {\n      this.load =load;\n    });\n\n    this.db.getCustomers().subscribe((data) => {\n      this.data = data;\n      this.parts = this.db.getParts();\n      // this.route.paramMap.subscribe((params: ParamMap) => {\n      //   this.selectedId = params.get('id');\n\n      // });\n\n      this.scheduleForm = this.fb.group({\n        id: [''],\n        items: this.fb.array([]),\n        typeOfDocument: ['']\n      });\n      \n\n      this.onMonthChanged();\n      // this.loadLoading();\n    });\n    \n    let curdate = new Date().getFullYear().toString() + '-' + (new Date().getMonth() + 1).toString();\n    console.log(curdate);\n    this.month = curdate;\n    this.scheduleForm.valueChanges.subscribe(() => {\n      this.validity = this.scheduleForm.valid; \n    });\n    \n  }\n  \n  // private loadLoading() {\n  //   this.db.getLoadingedit(this.quantity)\n  //     .subscribe((list: any) => {\n  //       this.options = list;\n  //       console.log(this.loadLoading)\n\n  //     })\n\n  // }\n\n  onMonthChanged() {\n    this.scheduleForm.reset();\n    console.log(this.month)\n    const date = new Date(this.month)\n    const monthNames = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\",\n      \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\" \n    ];\n    const string = date.getFullYear() + \"-\" + monthNames[date.getMonth()]\n    // console.log(string);\n    this.selectedId = string;\n    this.db.getScheduleSheet(string).get()\n      .toPromise()\n      .then((docSnapshot) => {    \n        if (docSnapshot.exists)  {\n          // Object exists\n          this.scheduleForm.controls['id'].setValue(docSnapshot.data().id);\n          this.scheduleForm.controls['typeOfDocument'].setValue(\"docSnapshot.data().typeOfDocument\");\n          for (let item of docSnapshot.data().items) {\n            this.patchItem(item)\n          }\n          console.log(docSnapshot.data())\n        } else {\n          // Object does not exist\n          this.scheduleForm.controls['id'].setValue(string);\n          this.scheduleForm.controls['typeOfDocument'].setValue(\"schedule\");\n          this.parts.subscribe((parts) => {\n            for (let part of parts) {\n              console.log(part);\n              this.addItem(part);\n            }\n          });\n        }\n      });\n  }\n  public onChange() {\n\n    this.parts = this.firestore.collection('parts', ref => ref.where('customer', '==', this.selectedCustomer)).valueChanges();\n  };\n\n  addItem(part) {\n    const item = this.fb.group({\n      partName: part.name,\n      partNumber: part.code,\n      customer: [],\n      schedule: [],\n      dispatched: [],\n      balance: [],\n      completed: []\n      \n    });\n\n    (this.scheduleForm.controls['items'] as FormArray).push(item);\n  }\n\n  patchItem(data) {\n    const item = this.fb.group({\n      partName: data.partName,\n      partNumber: data.partNumber,\n      customer: data.customer,\n      schedule: data.schedule,\n      dispatched: data.dispatched,\n      balance: data.balance,\n      completed: data.completed\n      \n    });\n    (this.scheduleForm.controls['items'] as FormArray).push(item);\n    \n  }\n\n\n\n\n  // ONSUBMIT\n  onButtonClicked(clickedButton) {\n    console.log(this.scheduleForm.value)\n    // this.scheduleForm.get(\"typeOfDocument\").setValue(\"schedule\");\n    if (clickedButton === 'save') {\n      this.db.addScheduleSheet(this.scheduleForm.value, this.selectedId)\n        .then(() => {\n          this.toast.success('Schedule updated succesfully')   \n        });\n    }\n  }\n}","<input  [(ngModel)]=\"month\" type=\"month\" id=\"month\" nbInput (change)=\"onMonthChanged()\">\n\n<nb-select placeholder=\"Select Customer\" id=\"customer\" style=\"margin-left: 20px;\" [(selected)]=\"selectedCustomer\">\n    <nb-option *ngFor=\"let customer of data\" [value]=\"customer.name\" (click)=\"onChange()\">{{customer.name}}</nb-option>\n</nb-select>\n\n<!-- <button (click)=\"onChange()\">Dummy</button> -->\n<nb-card>\n    <nb-card-body>\n        <form [formGroup]=\"scheduleForm\">\n        <table style=\"width: 100%;\" formArrayName=\"items\">\n            <tr style=\"width: 100%;\">\n                <th for=\"partName\" class=\"col-4 form-group\">Part Name/Part Number</th>\n                <th for=\"schedule\"class=\"col-2 table-head\">Schedule</th>\n                <th for=\"dispatched\"class=\"col-2 table-head\">Dispatched</th>\n                <th for=\"balance\"class=\"col-2 table-head\">Balance</th>\n                <th for=\"completed\"class=\"col-2 table-head\">% Completed</th>\n            </tr>\n            <tr *ngFor=\"let item of items.controls; let i = index\" class=\"col-12\" [formGroupName]=\"i\" >\n                <td  id=\"partName\"class=\"col-4\">{{item.value.partName}}/{{item.value.partNumber}}</td>\n                <td  id=\"schedule\"class=\"table-head\"><input type=\"text\" class=\"table-head col-1\" id=\"text\" formControlName=\"schedule\" nbInput></td>\n                <div *ngFor=\"let items of load\">\n                <td  id=\"dispatched\"class=\"col-2 table-head\">{{items.quantity}}</td>\n                </div>\n                <td  id=\"balance\"class=\"col-2 table-head\">{{item.value.schedule-item.value.dispatched}}</td>\n                <td  id=\"completed\"class=\"col-2 table-head\">\n                    <svg width=\"100\" height=\"10\">\n                        <rect width=\"100\" height=\"10\" style=\"fill:rgb(255, 217, 0);stroke-width:3;stroke:rgb(0,0,0)\" />\n                      </svg>\n                </td>\n            </tr>\n        </table>\n        </form>\n    </nb-card-body>\n</nb-card>\n\n<pre>\n<!-- {{data}} -->\n</pre>\n\n\n<!-- footer -->\n<ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer>","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n\n  constructor(private firestore: AngularFirestore) { }\n  // MATERIALS\n  public addMaterial(data: any, id?: string) {\n    const uid = id || this.firestore.createId();\n    data.id = uid;\n    return this.firestore.collection('materials').doc(uid).set(data);\n  }\n  public getMaterials() {\n    return this.firestore.collection('materials').valueChanges();\n  }\n  public getMaterial(id: string) {\n    return this.firestore.collection('materials').doc(id).valueChanges();\n  }\n\n  // PARTS\n  public addPart(data: any, id?: string) {\n    const uid = id || this.firestore.createId();\n    data.id = uid;\n    return this.firestore.collection('parts').doc(uid).set(data);\n  }\n  public getParts() {\n    return this.firestore.collection('parts').valueChanges();\n  }\n  public getPart(id: string) {\n    return this.firestore.collection('parts').doc(id).valueChanges();\n  }\n\n  // MACHINE\n  public addMachine(data: any, id?: string) {\n    const uid = id || this.firestore.createId();\n    data.id = uid;\n    return this.firestore.collection('machines').doc(uid).set(data);\n  }\n  public getMachines() {\n    return this.firestore.collection('machines').valueChanges();\n  }\n  public getMachine(id: string) {\n    return this.firestore.collection('machines').doc(id).valueChanges();\n  }\n\n  // MOULD\n  public addMould(data: any, id?: string) {\n    const uid = id || this.firestore.createId();\n    data.id = uid;\n    return this.firestore.collection('moulds').doc(uid).set(data);\n  }\n  public getMoulds() {\n    return this.firestore.collection('moulds').valueChanges();\n  }\n  public getMould(id: string) {\n    return this.firestore.collection('moulds').doc(id).valueChanges();\n  }\n\n  // EMPLOYEES\n  public addEmployee(data: any, id?: string) {\n    const uid = id || this.firestore.createId();\n    data.id = uid;\n    return this.firestore.collection('employees').doc(uid).set(data);\n  }\n  public getEmployees() {\n    return this.firestore.collection('employees').valueChanges();\n  }\n  public getEmployee(id: string) {\n    return this.firestore.collection('employees').doc(id).valueChanges();\n  }\n\n  // CUSTOMERS\n  public addCustomer(data: any, id?: string) {\n    const uid = id || this.firestore.createId();\n    data.id = uid;\n    return this.firestore.collection('customers').doc(uid).set(data);\n  }\n  public getCustomers() {\n    return this.firestore.collection('customers').valueChanges();\n  }\n  public getCustomer(id: string) {\n    return this.firestore.collection('customers').doc(id).valueChanges();\n  }\n\n  // VENDORS\n  public addVendor(data: any, id?: string) {\n    const uid = id || this.firestore.createId();\n    data.id = uid;\n    return this.firestore.collection('vendors').doc(uid).set(data);\n  }\n  public getVendors() {\n    return this.firestore.collection('vendors').valueChanges();\n  }\n  public getVendor(id: string) {\n    return this.firestore.collection('vendors').doc(id).valueChanges();\n  }\n\n  // Loading Sheet\n  public addLoadingSheet(data: any, id?: string) {\n    const uid = id || this.firestore.createId();\n    data.id = uid;\n    return this.firestore.collection('loading').doc(uid).set(data);\n  }\n  public getLoadingSheetList() {\n    return this.firestore.collection('loading').valueChanges();\n  }\n  public getLoadingSheet(id: string) {\n    return this.firestore.collection('loading').doc(id).valueChanges();\n  }\n  public click(id:string){\n\t  this.firestore.doc('loading/' + id).delete()\n  }\n\n  // Schedule Sheet\n  public addScheduleSheet(data: any, id?:string){\n    // const october_21= id || this.firestore.createId();\n    // data.id = october_21;\n    return this.firestore.collection('schedule').doc(id).set(data);\n  }\n  public getScheduleSheetList() {\n    return this.firestore.collection('schedule').valueChanges();\n  }\n  public getScheduleSheet(id: string) {\n    return this.firestore.collection('schedule').doc(id);\n  }\n\n  //INVOICE\n  public addInvoice(data: any, id?: string) {\n    const uid = id || this.firestore.createId();\n    data.id = uid;\n    return this.firestore.collection('invoice').doc(uid).set(data);\n  }\n  public getInvoiceList() {\n    return this.firestore.collection('invoice').valueChanges();\n  }\n  public getInvoice(id: string) {\n    return this.firestore.collection('invoice').doc(id).valueChanges();\n  }\n}\n\n","import { Component, Input, OnInit, Output,EventEmitter } from '@angular/core';\n\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-form-delete',\n  templateUrl: './form-delete.component.html',\n  styleUrls: ['./form-delete.component.scss']\n})\nexport class FormDeleteComponent implements OnInit {\n  @Input() status='true';\n  @Output() event= new EventEmitter<string>();\n  constructor( private location : Location) { }\n\n  ngOnInit(): void {\n  }\n}","<div>\n    <button status=\"primary\" style=\"float: right;\" (click)=\"event.emit('delete')\" nbButton >\n        <nb-icon icon=\"trash\"></nb-icon> Delete</button>\n</div>","import { animate, query, style, transition, trigger } from \"@angular/animations\";\n\nexport const fader = trigger('routeAnimations', [\n    transition('* <=> *', [\n        query(':enter,:leave', [\n            style({\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                opacity: 0,\n                transform: 'scale(0) translateY(100%)'\n            })\n        ]),\n        query(':enter', [\n            animate('600ms ease',\n                style({\n                    opacity: 1,\n                    transform: 'scale(1) translateY(0)'\n                }))\n        ])\n    ])\n])","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'ui-form-footer',\n  templateUrl: './form-footer.component.html',\n  styleUrls: ['./form-footer.component.scss']\n})\n\n\nexport class FormFooterComponent implements OnInit {\n  @Input() status = 'true';\n  @Output() event = new EventEmitter<string>();\n  constructor(private location: Location) { }\n\n  ngOnInit(): void {\n  }\n\n  onDismissClicked() {\n    this.event.emit('dismiss');\n    this.location.back();\n  }\n}\n","<nb-card class=\"footer\">\n    <nb-card-body>\n\n        <button class=\"fancy-button primary\" [disabled]=\"!status\" (click)=\"event.emit('save')\">\n            <span>Save</span>\n        </button>\n        <button class=\"secondary\" (click)=\"onDismissClicked()\">\n            <span>Discard</span>\n        </button>\n    </nb-card-body>\n</nb-card>","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ui-list-view',\n  templateUrl: './list-view.component.html',\n  styleUrls: ['./list-view.component.scss']\n})\nexport class ListViewComponent implements OnInit {\n  @Input() list: any;\n  @Output() onclick: EventEmitter<any> = new EventEmitter<any>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onItemClicked(item) {\n    this.onclick.emit(item);\n  }\n\n}\n","<nb-card>\n\n\n  \n    <nb-list>\n        <nb-list-item style=\"cursor: pointer;\" *ngFor=\"let item of list\" (click)=\"onItemClicked(item)\">\n            <span>{{item.name}} / {{item.code}}</span>\n        \n            <!-- <span *ngIf=\"item?.typeOfDocument=='loading'\">\n                <span *ngIf=\"item?.date\" class=\"col-2\">{{item.date.toMillis()|date:'dd/MM/yyyy'}}</span>\n                <span *ngIf=\"item?.partNo\" class=\"col-2\">{{item.partNo}}</span>\n                <span *ngIf=\"item?.partName\" class=\"col-2\">{{item.partName}}</span>\n                <span *ngIf=\"item?.quantity\" class=\"col-2\">{{item.quantity}}</span>\n                <span *ngIf=\"item?.invoiceNumber\" class=\"col-2\">{{item.invoiceNumber}}</span>\n                <span *ngIf=\"item?.invoiceDate\" class=\"col-2\">{{item.invoiceDate.toMillis()|date:'dd/MM/yyyy'}}</span>\n                <span class=\"col-2\" style=\"vertical-align:bottom;\">\n                    <svg *ngIf=\"item?.grnNo; else noGrn\" height=\"20\" width=\"20\">\n                        <circle cx=\"10\" cy=\"10\" r=\"10\" stroke=\"grey\" stroke-width=\"1\" fill=\"green\" />\n                    </svg>\n                    <ng-template #noGrn><svg height=\"20\" width=\"20\">\n                            <circle cx=\"10\" cy=\"10\" r=\"10\" stroke=\"grey\" stroke-width=\"1\" fill=\"red\" />\n                        </svg></ng-template>\n                </span>\n            </span> -->\n        </nb-list-item>\n    </nb-list>\n</nb-card>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  @Output() sidenavStatus: EventEmitter<boolean> = new EventEmitter();\n  showSidenav=false;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.sidenavStatus.emit(false);\n  }\n\n  onSettingsClicked() {\n\n  }\n\n  sidenavToggle(){\n    this.showSidenav = !this.showSidenav\n    this.sidenavStatus.emit(this.showSidenav);\n  }\n}\n","<div class=\"navbar\">\n    <div class=\"icon-button toggle-sidenav\" (click)=\"sidenavToggle()\">\n        <svg viewBox=\"0 0 100 80\" width=\"24\" height=\"24\">\n            <rect width=\"100\" height=\"16\" rx=\"8\" fill=\"#f5f5f5\"></rect>\n            <rect y=\"30\" width=\"100\" height=\"16\" rx=\"8\" fill=\"#f5f5f5\"></rect>\n            <rect y=\"60\" width=\"100\" height=\"16\" rx=\"8\" fill=\"#f5f5f5\"></rect>\n        </svg>\n    </div>\n    <div class=\"logo-container\">\n        <img src=\"assets/icons/logo.png\" class=\"nav-logo\">\n    </div>\n    <div class=\"nav-menu\">\n        <div class=\"icon-button\" routerLink=\"preferences\">\n            <img src=\"assets/app/setting.png\" class=\"icon\" alt=\"setting-icon\">\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() showSidenav!: boolean;\n  public showMaster = true; \n  public showProduction = true;\n  constructor() { }\n  // items: NbMenuItem[] = [\n  //   {\n  //     title: 'Dashboard',\n  //     icon: 'pie-chart-outline',\n  //     link: '/'\n  //   },\n  //   {\n  //     title: 'Master',\n  //     expanded: false,\n  //     children: [\n  //       {\n  //         title: 'Materials',\n  //         icon: 'copy-outline',\n  //         link: '/materials'\n  //       },\n  //       {\n  //         title: 'Part',\n  //         icon: 'cube-outline',\n  //         link: '/parts'\n  //       },\n  //       {\n  //         title: 'Machine',\n  //         icon: 'pantone-outline',\n  //         link: '/machines'\n  //       },\n  //       {\n  //         title: 'Mould',\n  //         icon: 'printer-outline',\n  //         link: '/moulds'\n  //       },\n  //       {\n  //         title: 'Employees',\n  //         icon: 'people-outline',\n  //         link: '/employees'\n  //       },\n  //       {\n  //         title: 'Customers',\n  //         icon: 'car-outline',\n  //         link: '/customers'\n  //       },\n  //       {\n  //         title: 'Vendors',\n  //         icon: 'shopping-cart-outline',\n  //         link: '/vendors'\n  //       },\n\n  //     ]\n  //   }, {\n  //     title: 'Planning and Control',\n  //     children: [\n  //       {\n  //         title: 'Schedule',\n  //         icon: 'edit-2-outline',\n  //         link: 'schedule'\n  //       },\n  //       {\n  //         title: 'Loading / Dispatch sheet',\n  //         icon: 'car-outline',\n  //         link: 'loading'\n  //       }\n\n  //     ]\n  //   },\n  //   {\n  //     title: 'Production',\n  //     expanded: false,\n  //   }, {\n  //     title: 'Inventory',\n  //     expanded: false\n  //   },\n  //   {\n  //     title: 'Finance',\n  //     children: [\n  //       {\n  //         title: 'Invoice',\n  //         icon: 'car-outline',\n  //         link: 'invoice'\n  //       }\n\n  //     ]\n  //   },\n  // ];\n  ngOnInit(): void {\n  }\n\n}\n","\n<!-- <nb-sidebar class=\"sidenav\" responsive>\n    <nb-menu [items]=\"items\">\n    </nb-menu>\n  </nb-sidebar> -->\n<div id=\"mySidenav\" class=\"sidenav\" *ngIf=\"showSidenav\">\n    <a href=\"/dashboard\">Dashboard</a>\n\n    \n    <button class=\"dropdown-btn\"  (click)=\"showMaster = !showMaster\">Master\n        <i class=\"fa fa-caret-down\"></i>\n    </button>\n    <div class=\"dropdown-container\" [ngClass]=\"{show: showMaster, hide: !showMaster}\">\n        <a href=\"/materials\">Material</a>\n        <a href=\"/parts\">Part</a>\n        <a href=\"/moulds\">Mould</a>\n        <a href=\"/machines\">Machine</a>\n        <a href=\"/employees\">Employee</a>\n        <a href=\"/customers\">Customer</a>\n        <a href=\"/vendors\">Vendor</a>\n    </div>\n    <button class=\"dropdown-btn\"  (click)=\"showProduction = !showProduction\">Production\n        <i class=\"fa fa-caret-down\"></i>\n    </button>\n    <button class=\"dropdown-btn\"  (click)=\"showProduction = !showProduction\">Quality\n        <i class=\"fa fa-caret-down\"></i>\n    </button>\n    <button class=\"dropdown-btn\"  (click)=\"showProduction = !showProduction\">Inventory\n        <i class=\"fa fa-caret-down\"></i>\n    </button>\n    <button class=\"dropdown-btn\"  (click)=\"showProduction = !showProduction\">Engineering\n        <i class=\"fa fa-caret-down\"></i>\n    </button>\n    <button class=\"dropdown-btn\"  (click)=\"showProduction = !showProduction\">Finance\n        <i class=\"fa fa-caret-down\"></i>\n    </button>\n    <a href=\"/schedule\">Schedule</a>\n    <a href=\"/loading\">Loading Sheet</a>\n    <a href=\"/invoice\">Invoice</a>\n</div>\n\n\n","import { Injectable } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private toastr: ToastrService) {\n\n  }\n  success(message, title?) {\n    this.toastr.success(message, title || '', { closeButton: true, timeOut: 5000 });\n  }\n}\n","import { ToastService } from './../../ui/toast.service';\nimport { DatabaseService } from './../../services/database/database.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-vendor-edit',\n  templateUrl: './vendor-edit.component.html',\n  styleUrls: ['./vendor-edit.component.scss']\n})\nexport class VendorEditComponent implements OnInit {\n\n  // GETTERS AND SETTERS\n  get name() {\n    return this.form.get('name');\n  }\n  get address() {\n    return this.form.get('address');\n  }\n  get pincode() {\n    return this.form.get('pincode');\n  }\n  get gstin() {\n    return this.form.get('gstin');\n  }\n  // DECLARATIONS\n  private selectedId: string;\n  selectedObject: any;\n  form: FormGroup;\n  validity = false;\n\n  // MAIN\n  constructor(\n    private fb: FormBuilder,\n    private db: DatabaseService,\n    private toast: ToastService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.selectedId = params.get('id');\n      this.fetchObject();\n    });\n    this.form = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      address: ['', [Validators.required, Validators.minLength(3)]],\n      pincode: ['', [Validators.required, Validators.minLength(3)]],\n      gstin: ['', [Validators.required, Validators.minLength(15), Validators.maxLength(15)]]\n    });\n\n    this.form.valueChanges.subscribe(() => {\n      this.validity = this.form.valid;\n    });\n  }\n  fetchObject() {\n    if (this.selectedId) {\n      this.selectedObject = this.db.getVendor(this.selectedId);\n      this.selectedObject.subscribe((data: any) => {\n        this.form.setValue({\n          name: data.name,\n          address: data.address,\n          pincode: data.pincode,\n          gstin: data.gstin\n        });\n      });\n    }\n  }\n  onButtonClicked(clickedButton) {\n    if (clickedButton === 'save') {\n      this.db.addVendor(this.form.value, this.selectedId)\n        .then(() => {\n          this.toast.success('Vendor updated succesfully');\n          this.form.reset();\n          if (this.selectedId) {\n            this.location.back();\n          }\n        });\n    }\n  }\n\n}\n","<nb-card>\n    <nb-card-header>Vendor Details</nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Name</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <input type=\"text\" [class.is-invalid]=\"name.invalid && (name.dirty || name.touched)\" nbInput\n                            fullWidth formControlName=\"name\" id=\"name\" placeholder=\"eg. Morakhot Industries Pvt. Ltd.\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"name.errors?.required\"> <small>Please enter name of the Vendor</small>\n                                </li>\n                                <li *ngIf=\"name.errors?.minlength\"> <small>Vendor's Name should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Address</label>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <textarea type=\"text\" [class.is-invalid]=\"address.invalid && (address.dirty || address.touched)\"\n                            nbInput fullWidth class=\"form-control\" formControlName=\"address\" id=\"address\"\n                            placeholder=\"eg. No 6/26 Shastri Bhavan                                                                                              2nd Floor, Haddows Road,                                                                  Nungambakkam\"\n                            rows=\"3\"></textarea>\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"address.invalid && (address.dirty || address.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"address.errors?.required\"> <small>Please enter an Address</small></li>\n                                <li *ngIf=\"address.errors?.minlength\"> <small>Address should contain atleast 3\n                                        characters.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Pincode</label>\n                <div class=\"row\">\n                    <div class=\"col-md-2 col-5\">\n                        <input type=\"number\" [class.is-invalid]=\"pincode.invalid && (pincode.dirty || pincode.touched)\"\n                            nbInput fullWidth class=\"form-control\" formControlName=\"pincode\" id=\"pincode\"\n                            placeholder=\"eg. 600001\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"pincode.invalid && (pincode.dirty || pincode.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"pincode.errors?.required\"> <small>Please enter a Pincode</small></li>\n                                <li *ngIf=\"pincode.errors?.minlength\"> <small>Part Name should contain 6\n                                        numbers.</small>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">GSTIN</label>\n                <div class=\"row\">\n                    <div class=\"col-md-3 col-8\">\n                        <input type=\"text\" [class.is-invalid]=\"gstin.invalid && (gstin.dirty || gstin.touched)\" nbInput\n                            fullWidth class=\"form-control\" formControlName=\"gstin\" id=\"gstin\"\n                            placeholder=\"eg. 33AABCT3518Q1Z3\">\n                    </div>\n                    <!-- ERROR -->\n                    <div *ngIf=\"gstin.invalid && (gstin.dirty || gstin.touched)\" class=\"col-md-6\">\n                        <div class=\"error\">\n                            <ul>\n                                <li *ngIf=\"gstin.errors?.required\"> <small>Please enter a valid GSTIN</small></li>\n                                <li *ngIf=\"gstin.errors?.minlength ||  gstin.errors?.maxlength\"> <small>GSTIN should\n                                        contain 15\n                                        only\n                                        characters.</small>\n                                </li>\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n\n    </nb-card-body>\n</nb-card>\n<!-- FOOTER -->\n<ui-form-footer (event)=\"onButtonClicked($event)\" [status]=\"validity\"></ui-form-footer>","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from 'src/app/services/database/database.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-vendor-list',\n  templateUrl: './vendor-list.component.html',\n  styleUrls: ['./vendor-list.component.scss']\n})\nexport class VendorListComponent implements OnInit {\n  sort: any = '1';\n  data: any = [];\n\n  constructor(private db: DatabaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.db.getVendors().subscribe((data) => {\n      this.data = data;\n    });\n\n  }\n\n  onItemSelected(item) {\n    this.router.navigate([`/vendors/${item.id}`]);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <button nbButton size=\"small\" routerLink='/vendors/new' status=\"primary\">New Vendor</button>\n    </div>\n    <!-- <div class=\"col-2\"> -->\n    <!-- <nb-select size=\"small\" style=\"margin-left:auto\" [(selected)]='sort' status=\"basic\">\n        <nb-option value=\"1\">name</nb-option>\n        <nb-option value=\"2\">Option 2</nb-option>\n        <nb-option value=\"3\">Option 3</nb-option>\n        <nb-option value=\"4\">Option 4</nb-option>\n    </nb-select> -->\n    <!-- </div> -->\n\n    <nb-actions class=\"col-6\">\n        <nb-action icon=\"search-outline\"></nb-action>\n        <nb-action icon=\"power-outline\"> Views</nb-action>\n        <nb-action icon=\"person-outline\"></nb-action>\n        <nb-action icon=\"home-outline\"></nb-action>\n    </nb-actions>\n</div>\n\n<ui-list-view [list]=\"data\" (onclick)=\"onItemSelected($event)\"></ui-list-view>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBKj6hFakE8vGcw_QJa7jXTAeHexrS2NAw',\n    authDomain: 'angle-dev.firebaseapp.com',\n    databaseURL: 'https://angle-dev.firebaseio.com',\n    projectId: 'angle-dev',\n    storageBucket: 'angle-dev.appspot.com',\n    messagingSenderId: '222777721610',\n    appId: '1:222777721610:web:839cf35b5683dae34ff0f3',\n    measurementId: 'G-KXB860QFML'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}